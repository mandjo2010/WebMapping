{"version":3,"sources":["../src/events/Event.js","src/ObjectEventType.js","src/Disposable.js","src/array.js","src/functions.js","src/obj.js","../src/events/Target.js","../src/events/EventType.js","src/events.js","src/Observable.js","src/util.js","src/Object.js","src/MapEventType.js","src/has.js","src/dom.js","../src/control/Control.js","../src/pointer/EventType.js","../src/proj/Units.js","../src/proj/Projection.js","src/math.js","../src/proj/epsg3857.js","../src/proj/epsg4326.js","../src/proj/projections.js","../src/proj/transforms.js","../src/extent/Corner.js","../src/extent/Relationship.js","src/AssertionError.js","src/asserts.js","src/extent.js","../src/geom/GeometryType.js","src/sphere.js","src/string.js","src/coordinate.js","src/proj.js","../src/control/MousePosition.js","Scripts/Coordinates.js"],"names":["map","$","data","mousePosition","MousePosition","coordinateFormat","className","target","addControl"],"mappings":";;AmCAA;;AACA;;;ApBEA,AmBCA,A3BJA,ADGA,AkBHA,ACAA,AIAA,AbAA,ACAA,AIGA,AKAA,AxBHA,AUAA,ADGA,AVHA,A0BGA,AdHA;AKGA,AiBAA,A1BAA,AsBHA,IIGMA,GAAG,GAACC,CAAC,CAAC,MAAD,CAAD,CAAUC,IAAV,CAAe,KAAf,CAAV;ApBCA,AmBCA,AlCLA,AMIA,AcDA,ACCA,ACJA,AaKA,AxBDA,AHDA,AHHA,AKAA,IyBKMC,aAAa,GAAC,IAAIC,sBAAJ,CAAkB;AjBLtC,AKGA,AYGIC,A1BFJ,ALAA,ASAA,EsBEIA,EtBFE,EAAE,GACN,OAAO,EsBCW,EAAC,KtBDnB,KAAqB,WAArB,IAAoC,OsBCF,AtBDS,CsBCxB,CADiB,OtBAgB,CAAC,SAAjB,KAA+B,WAAnE,GACI,SAAS,CAAC,SAAV,CAAoB,WAApB,EADJ,GAEI,EAHN;AECA,AmBCA,A3BFA,ADCA,AkBDA,ACAA,AIAA,AbAA,ACAA,AGAA,AeGIC,AjCHJ,AUAA,ADCA,AVDA,A0BJA,AnBAA,AKSA,AiBNA,EKIIA,SAAS,EAAC,iCAFwB;AZLtC,AYQIC,A1BHJ,ALLA,A2BIA,EIIIA,MAAM,EAAC;ApBFX,AmBMA,AlCRA,AMEA,AcDA,AEDA,AaCsC,AxBCtC,AGNA,ATIA,AyBAA,ApBAA,CyBCoB,CAApB;AjBAA,AiBMAP,GAAG,CAACQ,UAAJ,CAAeL,AvBJA,AXAA,akCIf;ApBJA,AbCA,AUAE,ADDF,AVCE,A0BHF,AbHA,ANGA,AWLA,IjBQA,UAAA,CKAe,AiBAA,ACAA,ATAA,EdAf,YAAA;AKCE,AiBAA,ACAA,ATAA,ACAF,AKFA,ACFA,ArBIE,AEHF,ASOO,AHND,EcEJ,ACAA,ATAA,ECAI,AKFF,ATMS,KYJJ,ARAE,AKFF,AZAO,EeEL,AvBAT,AWIkB,CYLL,ARCD,AKFF,CEEC,ARAA,CMFb,ATMuB,CWJR,ARAA,CHIU,CAAC,AHNpB,GAAkB,CREtB,GAAA,AWIqB,CAAW,GWLnB,ARAA,MHKQ,MAA0B,CAAC,CAA3C;AqBbP,AVUE,ACAA,ATAA,ACAA,AKDF,ApBCI,AWKJ,AiBfA,ApBQE,EcEA,ACAA,ATAA,ONDG,IMCQ,CQAC,ACAA,CIAC,AbAA,CQAC,ACAA,CAFD,IfCV,OMDU,EQAA;AAGb,ACAA,AIAA,AbAA,AbXF,AWMA,AiBIM,ArBAA,EcCJ,ACAA,AIAA,AbAA,KSAK,AIAA,EJAE,AIAA,AEDO,CPCN,ACHK,AfEH,CMCD,CQAC,CRAC,CNDG,EmBAD,EEAT,CAAoB,ArBAd,CAAU,EcFP,ERAA,CeET,EAA4B,KAA5B,EAAmC,aAAnC,EAAgD,GrBA1C,CAAN;AcEJ,ACAA,AIAA,AbAA,AWHI,ARLN,AYOE,ArBAG,EcCH,ACAA,AIAA,AbAA,CNHE,EADF,CqBGM,CNCD,EAAE,AEHO,CFDD,CDIJ,EAAE,AKAA,AbAA,EaAE,AbAA,AWHT,CAAiB,EIEH,GAChB,IJHE,EECS,AFDmB,CXDnB,MeIE,EJHX,EAAqC,CIGrB,SAAlB,GAA8B,MAAM,CAAC,OAAP,CAAe,aAAf,CAA9B,GAA8D,KAAK,MADrE;APHa,ACKb,AIAA,AbAA,AOJF,AXIE,AXAA,A0BHA,AbHF,AVGM,A2BGJ,ArBAD,EeAC,AIAA,AbAA,AJAA,AXAA,EsBJE,EICE,AIGA,CNAC,AEHA,EFGE,ArBHO,CqBFD,ETKH,AJAA,CiBAC,AzBHP,A2BGO,CfAC,AOJA,AXIA,CiBAC,C5BAC,A0BHd,AvBAkB,A2BGJ,CRJC,CtBIC,A0BHA,CJDlB,OPDe,AJDA,CiBGA,CEGa,CAAC,OAAb,CAAqB,GAArB,CAAd;AxBCA,AkBAA,AIAA,AbAA,ACAA,AKFI,ACDN,AtBJe,A0BIX,AvBAF,A0BLF,ACQE,ArBCF,EHDE,AkBAA,AIAA,AbAA,ACAA,AcAA,INAI,ElBAE,AkBAA,CIAC,AZAA,AKFO,AlBDP,A2BGA,CxBAC,AoBHA,CEGC,AZAA,CcAC,C3BHV,CYGY,AMFR,AKDQ,EXGE,CMFK,CfJN,CwBMI,CFJJ,AZDD,IcKU,CAAC,CAAb,GAAiB,CfNd,OWGL,CAAmB,GIGY,CAAC,KJHhC,CAAN,AIGQ,GAAuC,OAAjD;ANNa,AIOb,AbAA,AMFA,ApBEE,AUAF,AXCF,AEZA,AwBQG,AKTH,A5BSC,ACCM,A0BEL,EFAA,AbAA,AMFA,EjBAW,GiBAN,EpBEE,A6BAA,CTFC,AjBAS,EiBAjB,COEW,AxBDX,CWCY,CaAC,CbAC,AeAA,C7BAZ,E6BAe,C7BAC,AGDX,I0BCA,C7BAL,CGDW,CwBJA,AxBIC,A0BEV,GfRS,GXMb,KAAyB,C0BClB,GAEH,IAAI,E1BHR,GACI,A0BEA,CAAU,IAAI,C1BFR,CAAC,G0BEG,G1BHd,A0BG0B,G1BDtB,I0BCA,EAA+B,I1BDrB,A0BCV,CAAoC,GAApC,E1BDA,EAAkB,A0BCyB,W1BD3C,C0BDJ,C1BCiC;ALFnC,AOEE,AsBAA,AbAA,ACDA,AKDD,ApBEE,AyBHF,AvBCD,ASKO,ARFC,A0BCP,EFFC,AbAA,EhBFF,AaKa,ERFD,IQEO,ERFD,CLHlB,AaKsB,EGHP,AHGS,CbLxB,AaKyB,CGHR,AXCM,EwBDJ,EAAE,EhBGC,CAAW,ERFrB,ELHZ,EKGoC,EQEd,IRFoB,EwBP3B,AhBSgC,CAAC,CAA1B,CRFyB,GQEM,CRF7C,CQE+C,CAAC,ARFH,OQEA,CAAW,OAAX,KAAuB,CAAC,CAAtE;AbJL,A6BEA,AbTa,AMQf,ApBEE,A8BdF,AxBUA,AKOA,ARHU,A0BEV,EFHE,QxBCc,IAAI,CwBDL,EAAE,MxBCD,CAAc,OwBRf,qCxBQC,CAAN;AwBAR,ANJI,AlBKG,EwBDP,ONJc,KAAV,GAAe,IMIA,EAAE,oBARR;AASb,ANJA,ASVF,EHcE,ANJA,MMIM,EAAE,ENJE,GAAG,EAAb;AvBGA,A6BRa,AZSb,AMHD,AXIC,AORI,AdSE,EYFN,ALCA,IKDI,AZEQ,EYFN,CEPQ,EnBMd,AYES,CKXG,AZYM,CODP,CORP,CAAgB,AdSC,KLHrB,AmBNI,CnBMQ,AKGe,CcTA,AdSC,EOdf,CZWb,AmBNI,EnBMY,AmBNgB,CdSL,CAArB,CcTF,EAA+B;AnBOjC,AOEF,AgBHF,ASlBA,AlBeM,AKFJ,ATOF,EHCE,EGDE,GHCG,EAAE,AONO,AKFP,IAAI,CAAC,CTOC,CHZA,CYKN,CAAS,ATOA,CAAlB,GSPsB,CAAC,GAAL,CAAS,GLErB,CACJ,CKHgB,EAAgB,GAAhB,CAAT,ELEH,AKFkC,ELItC,CKJO,CAAP,QLEI,EAGJ,cAHI,EAIJ,qBAJI,EAIiB;APIrB,AUHA,AfCA,AUCA,AEDA,AVHI,AeJL,AdQO,AKAR,EHCE,ALFA,IKEI,AOFE,CTCK,CECL,CHLQ,ECIC,CHDf,AYAY,ATCI,CHDhB,CKba,AHUT,CUIF,ATAiB,CAAR,CDJQ,CCIG,EAAE,EHDxB,CAAA,AGC2B,MSAX,CZDhB,EGCoC,CHDpC,AYCoB,ATAiB,MAA/B,EAAuC,CAAC,GHD9C,AGCiD,ESAf,ATA5B,CSA6B,CTAkB,EAAE,CAAjD,ESAJ,ATAwD,GSCpD,cAAc,CAAC,KAAf,EADJ,GAEI,+BACA,IAAI,eAAJ,CAAoB,SAAS,IAAI,GAAjC,EAAsC,UAAU,IAAI,GAApD,CADA,GAEA,QAAQ,CAAC,aAAT,CAAuB,QAAvB,CALN;APGA,ALFE,AEHF,ASMK,AMTP,AdOU,EECR,EMCW,GNDN,CLFC,AGCQ,CECP,ALFA,AEHA,CSMU,GAAG,CXHR,AEHZ,ACIoB,CQEE,CNjBT,AMiBU,CRFA,KHDrB,CWGkB,CXHE,AWGS,ERFC,CAAC,CAAD,CAAxB,GQEY,MAAyB,CAAC,CAA1B,IAA+B,EAAE,CAAC,OAAH,CAAW,MAAX,KAAsB,CAAC,CAArE;AbHH,AOGF,AeJI,ApBEA,ACVA,AWcJ,AVPD,ASOD,ENFE,IOEI,GdLG,AsBDO,AnBRA,EDUL,CoBFL,CfIO,AeJO,EfIL,AOEb,EQNI,ARMW,EQNO,ApBElB,ECVA,CDUgB,ACVO,IDUvB,CFDF,COdW,EJKT,EAAiC,MAAjC,EAAyC,cAAzC,EAAuD;AHWzD,AOEF,AeJA,ApBEI,ACVJ,A6BPF,AlBqBI,ANNJ,AJAA,ACEU,A0BEJ,ExBAJ,EOEE,EXdE,CIYC,CFFO,CEEL,AeHL,AnBTF,A4BYc,CjBEN,CZJC,ACVA,AWcA,GQLF,AnBTP,AEUkB,CiBDV,CffK,AOoBX,GQLK,ARKU,ATJM,CiBDrB,IACA,ASEE,CAA0B,C7BF1B,C6BEA,CjBEF,ATJU,CiBAL,ASE2B,CTF1B,CSEJ,C1BFgC,C0BEA,CTFxB,CAAC,GjBA6B,IiBAlC,CAAa,AjBA0B,IAAvC,EAA6C,kCiBA7C,EAAuD,SAAvD,CAAD,CADL,IAEA,IAHF;AfKA,AWHF,ADAE,AKGD,AI3BD,AxByBK,ACVH,AWcC,ATJS,AyBPZ,ACSE,ExBAA,AUHA,IdTM,A4BYA,EdHA,AcGE,ExBAA,AUHA,CZCO,A0BEJ,CxBAD,AwBAE,CdlBA,EZgBS,CFVL,C4BYC,C1BFP,CFVS,A4BYR,EAAU,CxBnBR,AFiBe,I0BEjB,CAAgB,C1BFjB,EAA0B,A0BEzB,CAAX,E5BZiC,IAAI,yBAArC;AIaA,AeCF,ApBHG,AUCD,ATXA,AEUY,A0BEZ,ExBAA,AKDA,CVNA,GCLI,A4BYE,EAAE,CnBDD,ATXA,EIYE,AKDA,AmBCE,C5BZD,AEUM,A0BEJ,CxBAD,AJZX,I4BYiB,C1BFK,CAAC,A0BEZ,EAAU,GxBpBR,EwBoBF,CAAgB,GAAhB,CAAX,E1BFgB,CAAsB,GAAtB,CAAJ,EAAgC;AEG5C,AUJA,AfGA,AUrBa,ATUb,AWaA,ATHc,EEEd,IJZI,AWaA,IPDI,AJZA,AEUM,EEEJ,CJZC,GWaX,ATHoB,CAAC,CSGL,ETHI,CFVD,AEUL,CEnBD,AJSO,EEUQ,IFV5B,EEUkC,CAAC,GAAD,CAApB;ALAZ,AOGF,AKAF,ATZE,AWaE,ATHW,A0BEb,ExBAA,EOCE,EPDE,AJZA,C4BYC,CxBAC,CPHC,CcIC,CXbC,AWaA,AiBDA,CAAC,ExBtBG,AJUD,C4BYC,CAAb,CjBCE,CiBDc,C5BZhB,A4BYiB,CjBCC,EiBDE,G/BHlB,C+BGsB,CAAC,GjBCvB,AiBDkB,CAAS,EAAE,CAAC,MAAZ,EAAoB,EAAE,CAAC,MAAvB,CAApB,EAAoD,CAAC,EAArD,EAAyD;A/BDvD,AOEF,Ac/BF,APgCG,ANLH,AKIO,ARFM,A0BET,ExBAF,COZqB,CAcrB,ADFW,GNAN,AMAS,CkBAN,CxBAD,CMAU,AkBAP,ElBAS,CAAC,AkBAP,GxBvBA,IMuBI,CAAW,AkBAP,CAAC,EAAE,CAAC,CAAD,CAAF,IAAS,ClBAd,EkBAI,EAAe,ElBAS,AkBAxB,ClBAyB,AkBA5C,ClBAG;ANCL,AgBNI,AGrBN,AvBeE,A6BPF,AnBoBA,ARHW,AyBPJ,ACSH,ExBAF,EuBTW,ICSH,CxBAD,AgBNO,ApBNP,C4BYG,CxBAD,CgBNL,ApBNM,CoBMQ,AQML,E5BZA,G2BGY,CPGrB,ApBNJ,CIZa,CgBkBa,ApBNP,A2BGS,ACSP,CAAC,EAAE,CAAC,CAAD,CAAF,GDTjB,CCS0B,CRN3B,EAAmC,AQMlB,EAAe,EAAf,CAAnB,MRNE,EAA8C;AhBOlD,AUJA,AMFA,ApBNE,ACME,ACIG,AyBNT,ApBMM,EHEJ,AUJA,IMFM,ENEA,CbFQ,AMIA,CHEN,AUJA,EVIE,CHNN,EMIA,CaJY,AnBAE,AMIG,CNJE,CalBX,CMkBO,AbIf,EAAoB,CHvBX,GgBmBY,CAAC,OAAP,EAAnB;AhBOA,AgBNA,Ad5BF,AKkCE,AVLF,A2BKI,ArBFF,EHEA,IAAI,AgBNE,EhBMA,AwBAA,CjBCJ,AJHK,CqBEC,ErBFE,CqBEC,ArBFA,CHxBE,CO2BL,AiBDN,CjBCO,CiBDM,ErBFR,EaJc,GAAG,AbIF,EIGpB,CAAkB,AJHK,CAAC,GIGxB,EAAwB,CJHJ,CaJa,CAAC,CbID,MaJX,AbIiB,CAAC,CaJ1C,CbI4C,QIG1C,CADF,EJFyC,CAAlC,CAAP;AHGA,ADnCF,AW8BE,AG9BF,AEkCM,ApBFJ,ACTE,AWcH,ANND,AWNO,AdOC,A0BGF,ArBFL,EHEC,ALHA,ECTE,AgBES,GhBFN,CIYC,AYVS,CGSD,AjBFD,CEGL,AJZA,CgBEW,CGSf,ApBFJ,CoBEkB,ApBFlB,ACTW,A4BYA,CAAP,C1BHE,EiBEF,AnBXY,CIfH,Ce0BW,EnBXJ,CDSpB,CAAA,AiBPmB,ChBFI,GAAR,EmBWX,EAA8B,AnBXH,CAApB,CAAT,KDSF,GAAA,YAAA,CAAoB,CAApB;AKIA,Ac9BF,AC6BE,ACNA,ApBLE,AWeJ,AKbE,AdOK,A0BGF,ArBDL,CLtBO,CEuBL,AeDA,EnBXE,EoBKE,CDMC,AnBXA,CmBWC,ACNA,EpBLE,CIYC,AJZA,CmBWJ,CfCM,AeDX,GAAc,ECNE,GpBLG,CoBKC,ApBLA,EIhBP,Ee2Bb,InBX4B,CAAC,CoBKzB,CAAJ,CpBL4B,CoBKK,ApBLd,EAAgB,MAAhB,CAAjB;AYxBJ,AfkCI,AOGF,AeDD,ACNG,AGpBJ,AxBuBA,ASjCA,AQ2BE,AdQF,EEEE,EgBPE,AGpBJ,GnB2BO,EPHE,AOGA,ALJT,IFCI,CuBJU,CAAC,CvBIC,E0BxBhB,CxBuBA,CFCI,C0BxBJ,IHoBc,CAAV,GAAyB,EAAzB,AGpBJ,MAAA,EAAA;A1B0BI,AO5BW,AgBuBZ,AGrB0B,AxBF7B,ACkBI,AgBEF,AYSE,C7B7BJ,CwBE6B,CxBF7B,GiBoBM,EhBFE,A4BWA,EZTN,AYSQ,CL3BmB,AvBgBlB,CuBhBkB,CK2BhB,C5BXC,C4BWV,E5BXA,A4BWa,E5BXE,OuBhBU,EAAA,MAAA,CAAA;AQI7B,AjBoBE,ASvBA,AjBJF,ANoBM,A4BWA,EdJJ,WAAW,AcIA,CAAC,CdJC,AcIT,ad7BQ;AXDd,AcDA,AGyBE,ApBJI,A6BPN,AbQE,AYUG,ERPH,IpBJI,AgBCA,GhBDG,GoBIG,ApBJA,CoBIC,ErBGE,ACPA,CgBCC,EhBDE,CAAZ,CgBCJ,EAAoB,CIGV,CAAV,CAAuB,eAAvB,IAA0C,WAA1C;ANGA,AMFD,ApBJI,AUWE,AMVH,AYUD,IlBAU,CVdT,MAGO,WUWoB,GAC7B,OAAO,gBAAP,KAA4B,WAA5B,GAA0C,gBAA1C,GAA6D,CADxD;AE/BP,AmBQA,AbLO,AEuBP,AZ1BA,ARqBM,AUaN,AMZI,AcwBJ,AvBhBO,IwBtBD,AbLO,AFmBT,ATQS,ISRL,EEnBW,CFmBR,ATQS,EW3BE,CaKN,AxBsBO,CSRR,CAAC,CedG,GbLZ,AFmBH,CTQG,QwBtBP;AAEA,AbLA,AlBiBM,AgBCH,AYUD,GZbA,GhBEI,GgBCG,AYUA,C5BXC,A4BWR,G5BXW,GAAP;AHUF,AM7BJ,AoBEE,AvBkBI,AgBCF,AdME,A4BiBN,AFbC,M5BXK,GHSG,AKFO,EqBzBd,AvBkBS,GAAG,AEOR,CLEF,AGTW,AEOO,GLEJ,AGTZ,GEOA,CLEF,CKFwB,EqBzB1B,CAAY,IAAZ,EAAgB;A1B4Bf,AiBHD,ASzBA,AvBmBG,AWaC,AVRA,AeJF,AdMF,AyBNI,EbKJ,EELE,GdMG,CYDC,ASzBN,APoBM,CLYQ,AVRA,A0BJA,CbKN,CELC,AdME,EqB1BX,GAAA,GZgCI,AVRA,ACEJ,CqB1BA,AZgCyB,AVRA,A0BJrB,CXAe,AWAO,C1BItB,AeJK,CdMc,AyBNnB,C1BIuB,AeJP,CWAU,EhBY1B,AgBZA,EhBY4B,ATNhC,AyBNkC,EzBMH,QyBN3B,EAAwC;A9BU5C,AiBnCY,AGIP,ATAP,AFCA,ANoBG,AWaD,Ac5CF,AxBoCE,AeJI,AdMF,A4BgBJ,AHtBE,Cb1BF,GGIa,ATAb,EGkCM,AVRA,A0BJE,IVtBW,ADsBP,CLYD,AKZE,AdMF,CDFC,A0BJE,CVtBQ,CNkCR,CHlCd,AP0Be,A0BJE,EzBMA,CM5BjB,AN4BkB,Ee5BX,AhB0BL,CUQmB,CAAC,GgBZK,CzBMV,CAAb,CM5BJ,CmBsB+B,IhBY7B,CHlCF,EAAA,OmBsBE;AIbF,AjBoBA,AG3BA,AMAI,AfF6B,ARuB/B,AWYA,AVPA,AeNc,AdOb,AyBND,EnBvB+B,EuBS3B,EpB0BE,AgBZA,EJrBE,EIqBE,CnBvBqB,AGmCpB,CYjCC,AfFmB,CmBuBlB,ChBYC,CYjCC,MQOM,EvBTU,CuBSP,CvBTO,KGmCD,CHnCC,AGmCA,CHnCA,CeEJ,CIqBJ,EAAE,CAAC,ChBYI,AgBZL,ChBYzB,AgBZa,CAAb,CJrBe,CQOjB,ERPwC,aAAvB,GAAiC,MAAM,cAAQ,KAAR,CAAc,GAAd,EAAmB,CAAnB,CAApD;AQSJ,ARRI,AfFF,AGmCA,Ac7CF,AT+BqC,AdQpC,A4BmBD,AHzBE,EhBYA,IKdmC,AWE7B,ChBYD,CYjCG,EPmB0B,AWExB,ChBYD,AKdgC,EWE5B,CXFqB,COnBnB,APmB8B,CAAX,CAA9B,COlBA,CZgCa,CAAC,KAAK,CAAC,QgBZD,EhBYN,AgBZQ,CAAC,ChBYU,AgBZX,CAAZ,ChBYI,AgBZjB,ChBYS,GAAiC,QAAQ,CAAC,KAAK,CAAC,WAAP,CY/B9C,CZ+BkE,EAApB,CYhC9C,AZgCJ,GY9BI,eAFA,GAGA,IAHA,GAIA,eALF;AAOA,AZ4BF,AVTA,ASMK,AMZD,AdSN,AyBPE,IJfE,AbyBS,ETNP,A0BJE,GJfJ,AZ4BK,GY5BL,CPaS,CLeX,AKfY,CAAC,CfMb,C0BJiB,CJff,APac,CObd,CIekB,CAAC,CXFD,COblB,APaS,CObT,CIeuB,EjBUS,AMZT,CObvB,APaE,AWEwB,EJfpB,Ab0BR,EiBXoB,IAAgB,CJflC,Ab0BK,AiBXP,KJfgB,IAAd,Qb0BF,KAA6B,WAA7B,IACA,OAAO,eAAP,KAA2B,WAD3B,IAEA,IAAI,YAAY,iBAHX,EAG8B;Aa1BjC,AvBYF,AWeD,ANNK,AoBzCN,AxBuCE,AePG,Ac0BL,AHxBE,KXLE,CWKI,G3BFC,AKSO,KLTF,CKSR,CAAiB,CLTN,A2BEE,G3BFL,A2BEQ,EtBOhB,CLTiB,CAAC,AKSO,GLT7B,CKSI,EAA+B,QAA/B,EAAyC,CsBPf,EAAE,CAAC,CAAD,CAAF,EtBO1B,CsBPkC,CtBOiB,CsBPf,CAAC,CAAD,CAApB,ItBOhB,AsBP2C,CAA/C,CtBO+D;Aa1B1D,AlBkBN,AWgBD,ANPE,AKMF,AMfG,AWED,ITpBW,Eb2BP,AsBPE,CAAC,GTpBU,ASqBf,GTrBkB,CAAC,Ab2BT,AsBNN,CTrBgB,ASqBf,GTrBa,Ab2BJ,AsBNd,CAAS,CTrBgB,CAAC,EAAR,EAAY,Cb2BR,Ea3BJ,EAAiB,ASqBnC,CtBM2B,Ca3BT,CAAf,CSqBqB,GtBM1B,CsBN8B,CtBMO,AsBNN,GAAL,CAAS,WAAT,CAAxB,GACA,IAAI,CAAC,GAAL,CAAS,WAAT,IACE,IAAI,CAAC,GAAL,CAAS,WAAT,CADF,GAEE,IAAI,CAAC,GAAL,CAAS,IAAT,CAFF,GAGE,IAAI,CAAC,GAAL,CAAS,IAAT,CALJ;ATlBF,AZFA,ANoBA,AKQI,AJHF,A6BuBF,AHtBE,ItBEE,EJHE,G0BCG,GtBEG,CsBFC,C1BDX,CIGa,IsBFN,GAAa,CtBEC,CAAC,EsBFE,CAAC,CtBEZ,CAAc,GsBFP,CAAW,ItBElB,AsBFsB,CtBEjC,AsBFkC,IAAL,CAAU,CAAV,CAAX,EAAyB,IAAI,CAAC,IAAL,CAAU,IAAI,CAAd,CAAzB,CAApB;A9BGA,AoB9BK,AGyBD,AfKH,AJFD,AeRA,AWQD,E9BEC,EoB9BW,EhB4BP,GmBHU,AJLP,EnBUP,CAAA,CoB9BoB,ADoBpB,CfQA,CmBHI,CHzBmB,AGyBF,IHzBM,CpB8B3B,AoB9B4B,CpB8B5B,AuBLI,CHzBmB,CGyBM,EHzBI,MAA5B,GGyBD,CvBKJ,CuBLwC,EvBKxC,YAAA;Ae5BF,Af6BI,AkBCJ,ADHO,AG3BP,AGwBE,AK7CF,AxBiDE,AeTD,AciCD,AHxBA,CXxBoB,EAAb,CD0BP,ADHa,EMHL,GvBKC,AIDA,KcET,EKNkB,CLMlB,EDH4B,AMHP,EnBIZ,CaDsB,EAAxB,CjBEH,AuBLuB,CNI3B,AMJ4B,EvBKA,CkBC5B,GlBDI,CuBLiB,EAAnB;AvBMC,AkBCD,AKNA,AZ3BA,AH+BA,AJAE,AeRJ,GnBOE,GuBHM,AfIF,EJAI,GO/BR,GH+BA,EAAc,AJAE,GAAG,EmBJE,CZ3BrB,CAAY,CY2BY,AnBIA,CAAC,EO/BzB,EAAkB,GAAlB,EAAuB,AP+BJ,CmBJgB,AnBIA,CmBJC,InBIjB,CAAsB,CO/BzC,CY2BwB,CZ3BO,CY2B/B,AnBImB,CAA2B,SAA3B,CAAjB;AJGF,AuBNA,AZ5BA,AFKF,AD2BI,AyBuBJ,MV3BQ,EZ5BN,AHgCQ,KGhCR,EY4Be,CZ3Bb,EY2BgB,IZ3BhB,CAAA,GH+BsB,CG/BtB,CY2B0B,AZ3B1B,CY2B2B,AfIF,GG/BzB,EAAM,GH+BN,CG/BA,CY2B0B,CAAV,CAAuB,EZ3B5B,IADb,SY4BkB,CAAlB;AWdF,AjBiBA,AMFE,AZ1BE,AP6BA,ASMG,IAAM,ITNL,CmBHC,AnBGA,MaDM,AbCP,CaDQ,AJOS,GUTN,AnBGA,ASOjB,CUVkB,CNEC,CAAC,IJQb,ETPmB,CaDb,CAAf,AMFmB,CAAV,AVUP,CUV8B,CNEE,GbC1B,ASOW,CIRmB,GbCE,CaDE,AbCD,CaDE,EAAT,GAAc,AMFvC,AVUP,CUVA,GVUgC,GIRD,EJQM,CIRoB,AJQnB,GIRxC,AbCqD,MSOnB,CAAgB,CTPT,EAAsB,GSMxD,KTNkC,CAArC,EAAsE;AcIxE,ADJF,AIzBO,AWaD,AxBaF,AoB7CJ,AxB6CM,ASQN,AoBeA,IZjDa,Ab0BT,EJAE,G4BbU,EdgBd,CchBI,AxBaM,AJAA,C4BbQ,EfYL,ATCA,AJAA,CaDC,GIzBY,AjB0BtB,EcGJ,ADJmB,CCIP,ADJQ,AIzBU,CWa1B,EAA0B,CfYjB,AIzBqB,CJyBpC,AIzBqC,Ab0BtB,EUGb,AG7B8B,CJyBF,AeZxB,CdgBe,CG7BqB,AWaL,IfYrC,EIzB+B,GAAqB,GAA7C;AfCP,AY6BI,ADJJ,AIxBA,AEqBE,AGhBE,AMOF,AxBaI,AJAA,ACAC,E2BbL,E1BbF,AoBMI,ArBoBS,EkBJP,AfIA,AJAA,GsBpBE,CpBNR,AoBMS,EMOG,AxBaA,CF1BZ,A0Baa,AxBaA,AHAS,CqBpBlB,AMOQ,A5BaE,CaDC,AeZb,CfYc,AZEd,CqBrBc,AtBoBC,E4BbE,CAAC,CfYC,ASnBjB,AtBoBE,CaDgB,CXzBtB,AD2BS,CkBLK,CSTW,CAAC,CAAD,CfYV,AeZb,C1BbF,AWyBA,AZEe,CAAC,CC3BhB,CWyBgC,ATC1B,CSDN,ATCiC,CeJT,CAAC,ClBKvB,CGDI,EAAiC,EHCZ,IkBLH,CAAlB,CAAJ,AfII,EeJiC,ElBKrC,GACI,MAAM,CAAC,MADX,GAEI,UAAU,MAAV,EAAgB;AC7BD,AW0BrB,AG5BO,AGyBH,AGfA,AjBPJ,AuBaE,AlBoBI,ANPA,AJAA,ACGE,A4BmBR,E3BjDqB,A0BcnB,EZhBW,EZ6BP,AJAA,ACGQ,GSIE,CMpCG,CdEE,AiBuBV,CjBvBU,A0BcT,A3BgBQ,CehCE,AYgBT,CZhBU,AYgBX,A5BaE,CaDC,AG5BS,AYgBtB,A3BgBqB,CYJP,CbCC,ACGT,CC9Ba,C0BcF,C1BdE,A0BcD,AlBoBd,CGRe,AMHA,ATWO,CGRN,AMHA,EHzBA,AZ6BA,CwBbG,AxBaF,AJAjB,CE3Be,AcFc,AYgBT,C1BdL,AcFe,AYgBX,CfYV,AeZb,AlBoBI,CGRN,CHQmC,ANP7B,CAAuB,CSDG,AMHX,CAAjB,EfIE,CY7BgB,CZ6Ba,CY7BY,CH4BR,IAAvC,GTCM,CY7BgB,EAAoC,SAApC,CAAf;AdGL,AcDF,AGwBG,ApBJG,A6BLJ,AlBoBA,ANPG,AJAC,KIHF,CMUE,AVPA,GDRU,A6BLP,GlBoBG,GGPG,AHOA,CVPC,G4Bbd,A5BaiB,EAAE,CUOC,AVPA,CUOC,IVPJ,CAAS,IAAT,EDRb,ACQ4B,CDRQ,AWexC,CXfI,EAAuC,CAAvC,EAAwC,ECQ3B,CAAb;AJEJ,AGTA,A6BLD,AlBoBC,ANPC,AJAE,ACEG,AyBHR,E9BEE,IcMM,CTLK,EFVJ,A2BOA,C3BPC,CHSR,AcMW,ATLM,CLDjB,CGTW,CAAJ,AWeO,GXfC,CAAR,CEUD,ELDN,AGTmB,CHSnB,AGToB,CEUS,EFVN,CAAJ,A2BOrB,CAA2B,E3BPE,AEUrB,CFVsB,AWeE,CXfX,AWeY,ATLM,GFVL,CAAhC,EHSA,CcM8B,AgBRhC,ChBQE,CdNA,A8BFsC,MAAxC,EAA8C,I9BE5C;AACE,AkBEA,AKRF,ApBHD,A6BJD,AlBmBE,ATLQ,AyBHR,EhBQA,ETLQ,EyBHJ,EhBQE,CdNC,AkBEA,AKRA,ClBOO,CAAC,CSKL,AgBRA,EZIR,CbDM,AyBHK,CzBGO,AyBHpB,CZIe,CKRf,ETYkB,CAAC,CTLO,CAAC,CaCL,CAAC,CJIC,CdNtB,AcMuB,EIJvB,ClBF0B,CKCF,CAAlB,ELDN,EcMgB,EAAkB,EAAlB,CAAR,GAAgC,QAAQ,CAAC,KAAK,CAAC,YAAP,EAAqB,EAArB,CAAlD;AdLC,AkBGC,AKTH,AGfG,AfXA,ARwBJ,AWeE,ANTA,AoB5CF,AxB4CI,ASMG,ARHE,GLHP,C0BnBE,AfXA,AEoCS,ELNL,GkBnBA,AfXA,AGuCC,CY5BA,AfXA,CP8BE,EO9BP,CeWA,CZ4BF,ANTe,CG9BF,CeWC,ClBmBI,CG9BhB,EP8BA,MSMgC,GAAI,GazBpC,CAxBc,CA0Bd,ObuBoC;AURxC,AZ1BI,AGsCH,ANTG,AJAD,ASMD,AiBPA,G1BRA,CISE,EKME,CiBPC,GtBCG,CsBDC,CtBCC,AsBDA,CjBOC,EiBPE,CjBOC,AiBPT,EtBAa,AsBAF,EAAE,CjBOlB,EiBPqB,WAAW,CAAC,MAAjC,EAAyC,CAAC,GAAG,EAAE,GAAG,CAAlD,EAAqD,EAAE,CAAvD,EAA0D;A9BG5D,AM7BE,AoBUE,AZ4BJ,ANVI,AJAH,ACEO,AyBHJ,IJjBA,AlBkBA,AsBDA,ItBCI,CRCR,A0BnBQ,ArBoBO,CqBpBN,AlBkBC,AsBDA,CxB3BR,GE0BkB,AsBCN,CzBGN,EC9BN,AoBUE,C1BmBJ,AM7Bc,EoBUK,KIiBM,CAAC,CJjBtB,CpBVF,EAAsB,OwB2Ba,CAAC,CAAD,CAAZ,EAAiB,WAAW,CAAC,CAAC,GAAG,CAAL,CAA5B,EAAqC,MAArC,CAArB;A9B5CJ,AMiBE,AcAK,AZ6BH,AKKF,ARHK,AyBHJ,C9B7CH,AKuCO,ELvCP,CoBiBa,AZ6BT,EKKE,EPlCJ,IE6BU,CF7BV,CE6BY,EF5BV,AcDqB,GAAG,CAAC,CAAC,CdC1B,CAAA,CcDwB,EAAO,CdC/B,AcDgC,CdChC,CcDwB,EAAY,CdCpC,EcDwB,EAAiB,CdClC,CcDiB,CAArB,EdAL;AN+BF,AM5BI,AcDJ,AMSG,AlBeiB,AKShB,AMfG,AdaP,A4BhEA,GzByDE,CWNW,INeH,AMfO,GAAI,INeJ,GAAG,KMfC,CNeK,CAAC,cAAP,CAAsB,EAAtB,EAA0B,SAA1B,EAAqC;ALJvD,AKKI,AMfJ,AWQA,EtBEA,IKKI,ELLE,CAAC,AKKA,AiBPA,EjBOE,IiBPT,QjBOS,ELLT,CAAwB,IAAxB,EAA8B,QAA9B;Aa1BF,AKOA,AlBoBE,AKKM,AMfN,AWQD,ITzBD,IRgCQ,CazBR,AlBoBS,MKKM,GLLb,AKKgB,IQhClB,ARgCQ,CazBR,ELPA,UAAA,MAAA,EAAA;AAAiC,AK1BjC,AjB6BA,ADyBC,AoB5CK,AfiDC,AMfL,AWSF,CJrDA,CL0BiC,AK1BJ,EjB6B7B,EUeM,CO5CN,CAAA,CEUgB,CTkCd,CElB+B,CAAA,EZGjC,GAAA,MmBnBM,CAAyB,GnBmB/B,GYHiC,EAAA,CZGjC,EAAA,AmBnBM,EAAoC,CPgBT,CAAA;AHiC7B,AGhCF,AVFE,AFIqB,ANkBnB,A6BLA,AlBqBA,ANPN,AoB7CE,Af6CuD,AoB9DzD,ExBmCyB,EEJrB,CE+BgB,Ce7CZ,Af6CJ,GKGK,APlCD,ARsBQ,A6BLA,AlBqBA,CHtCP,CFIgB,CAAA,AmBlBX,GVgDV,AUhDa,EzBoCX,CeYyD,APlC3D,ARsBqB,EWgBnB,CHtCc,ARsBd,AWgBsB,CLlCH,CNkBK,CMlBL,AuBanB,CdiBgE,AcjBtC,CdiBuC,AfZjE,AyBpCsB,EzBoCK,AWgB3B,AcpDJ,CjBcE,CFIqB,AKkCY,CIJjC,AT9BqB,IuBanB,EAAsC,AlBqBtC,EAAsC,IkBrBtC,EAA4C;AhCa5C,AkBMF,AKVE,ApBHJ,A6BLA,AlBqBA,ADFE,AMjBF,INiBE,EmBnBI,AlBqBA,AKnBF,CaFG,EhCYO,AuBJA,ApBHP,C6BLG,AnBmBF,CAAC,CUXL,ApBHM,AWgBE,CSbM,ApBHP,EuBbE,AZ6BE,CkBrBC,AbEF,CaFG,G7BKV,AgBHP,ChBGmB,CWgBG,AKnBF,CIMhB,ATamB,CdTnB,AGPG,CHOuB,AuBJA,CSRpB,CnBmBR,CbPE,AgCZJ,AnBmB0B,CVdC,CHOM,AGPjC,CUcE,ECEF,ADF+B,IAA7B,EAAmC,CUXjC,EAAyC,IVW3C;AbNF,AM5BE,AiBwBF,AZ1BC,AFID,ANmBD,A6BLC,AJhCA,AfmDE,AMjBA,EnBUF,EM5BE,AOmCA,CbPC,CAAC,AuBJA,ASRE,CJhCD,EtBgBC,CAAC,AOmCC,CJjCR,AmBlBS,AfmDA,CmBnBG,AJhCF,GLwCV,ASRe,AJhCF,CAAR,EAAW,EAAE,C5B4ClB,AS1BA,AuBcqB,C1BhBnB,A0BgBoB,CJhCD,CnBkBrB,CHFsB,KOmCpB,CmBnBa,AnBmBc,EmBnB7B,CJhCgC,AfmD9B,CPnCA,AsBhB+B,CfmDC,IAAhC,CenDF,CfmDwC,CenDC,CAAC,GAAG,EAA7C,AfmDE,EenD+C,EAAE,CAAnD,EAAsD;A5B6CvD,AM3BG,AcFG,AXEL,ANqBF,A6BNE,AlBoBA,AcpDE,AfmDD,AMjBC,GNQF,CO3BW,AQfT,AfmDA,AMjBA,EaFI,AlBoBF,ELnCJ,AuBeQ,AbEF,GaFK,AnBmBF,AMjBA,CLkBT,CLnCA,CWFqB,ANqCT,CKlBC,CVhBX,AIiCA,AMjBY,CCnBU,AYiBP,CAAC,AnBmBF,CmBnBC,AnBoBf,CmBpBF,AJhCkB,ATkChB,CSlCiB,CnBkBjB,CWH4B,AXG5B,GWH+B,CXG/B,AmBlBgB,CnBkBhB,CmBlByB,CReU,CAAC,CXGpC,EWH+B,CAAS,EXGjC,EWHqC,CAAC,AQfT,CnBiBtC,AmBjBuC,CAAD,CReI,AQfxB,CReiC,AQfjD,IReqD,CAAC,EAAL,GAAU,CAAnB,CAAT,CAA5B;AccP,AlCiBA,AoB7BA,AGuBE,AZ1BF,AFMI,AuBaF,AlBoBE,AcpDD,AfoDA,AMlBA,AdWG,GcdJ,CLqBE,ESbE,ASPE,EAAE,CrBnBV,AQqBS,AdWO,CSON,CkBpBG,AlBoBF,KSbK,AlBMV,C2Bba,A3BaK,C2BbJ,CAAD,CTOC,AZ1BpB,AqBmBE,GlBoBE,ATPE,CSOkB,CTPM,KkBNxB,CTaF,EAA6B,CSbC,MTa9B,SSb6C,IAAI,UAAU,CAAC,UAAD,CAA7D,EAA2E;AACzE,AZnDJ,AqB4CE,AlBoBC,AKlBC,AdWF,CMzDF,CAAiC,EYmD7B,ESPI,A3BaF,E2BbI,GAAG,ETOA,ClBMX,EkBNc,AZnDhB,CAAA,IqB4CuB,CAAC,CAAD,CAArB,ETOwB,CAAC,UAAD,CAAV,CAAuB,eAAvB,CAAZ;ARnBJ,AMJE,AEwBC,ASPD,AlBoBD,AcrDC,AfoDA,AMjBE,IJfJ,AIeI,EaFI,EAAE,AbEF,CSnCC,AfoDA,EEhCT,AMJE,AWiBW,AbEF,GJfX,CapBE,CfoDA,KmBnBqB,AbEF,CaFG,AbEb,CaFY,CjBbvB,AiBaE,AbEoB,KEnBpB,CNIF,AMJc,ENId,EMJE,EAAkB,mBAAlB,EAAqC;ANIjB,AiBepB,AlBoBF,ActDC,AfoDA,AMjBK,AdUJ,CQRqC,CElBjB,CFkBf,GmBHD,C3BWC,C2BXC,GjBfc,AMHlB,AWkBO,CjBfW,CiBeT,AbCA,EdUX,C2BXc,CXlBZ,AFmBa,CEnBb,AWkBF,AbCgB,CJhBI,AV0BH,EU1BG,AIgBT,CEnBT,AFmBkB,CEnBlB,AFmBS,EdUX,EU1BoB,AMHlB,AFmBuB,AdUA,CU1BL,CMHZ,EFmBqB,CAAC,KAA1B;AJfJ,ATFE,AeDE,AEuBJ,ASLA,AJjCF,ATkCK,AdUD,IC5BA,CagBA,CEjBE,AWkBE,EAAE,C1BjBF,AiBsBC,CjBtBA,AeDC,CWkBG,A3BWF,CgB7BC,CWkBG,GXnBL,AWmBQ,A3BWd,EkBNF,ASLA,Q1BjBE,GAAwB,IAAxB;AN4BE,AM1BF,AYgCA,AGlCE,AEuBL,AZ5BD,AFOI,AUiBD,AdUA,II3BC,EYFE,GrB4BU,AkBMP,AThCD,CAAC,CYFE,CZEP,CYFS,EZEC,CSgCV,GAAe,CThCD,CAAC,ET0Bb,CAAyB,EkBML,ClBNpB,AkBMqB,CGlCR,CrB4Be,ES1B9B,ESgCe,EGpCT,GHoC4B,SAAnB,GAA+B,OAAO,CAAC,MAAvC,GAAgD,IAA/D;AlBLF,AkBOE,AGnCE,AZGF,AuBcF,EhCWA,GAAG,CAAC,AqB5BA,AWiBA,EAAE,IXjBI,CWiBC,CXjBC,AWiBR,IAAY,EhCWhB,AqB/BQ,AWoBU,KAAK,CAAvB,EAA0B;AhCY3B,AoB9BD,ACEM,AWiBF,AbCF,AdUA,Ie9BF,AYmBI,EXjBE,AWiBA,GAAG,AbCA,AdUA,C2BXL,A3BWM,GcVR,KdUA,GgB5BmB,CDFrB,CCEuB,EDFvB,UAAA,MAAA,CCFU,CDEV;AAAiC,ACG3B,AWiBH,AbCF,AdUA,CcxBmB,CCPa,CDO1B,GEJD,KDH2B,CAAA,ACGrB,EAAE,IALJ,YDEuB,EAAA,MAAA,CAAA;ALK/B,AKJA,ACGI,APoCA,AKjBN,AWQM,MT3BA,GPoCU,AgBTA,Ef1Bd,If2Ba,Ge3Bb,Ae0BI,Cf1BQ,AMDK,APoCb,AgBToB,ChBSC,COpCN,GPoCf,ECnCJ,ADmC6B,CgBTzB,Cf1Be,Ce0Be,OTjC1B,ISiCJ,EAAyC;Af1B7C,ATCE,AeDE,AZEF,AuBcF,AlBoBA,AgBTA,IxB1BE,AGCA,EYFE,AWgBE,AFWA,CEXC,CjBhBP,CTCM,AGCA,AKkCC,CRnCA,AGCA,AuBcG,GjBhBV,ADoCW,AgBTE,CrBzBX,AuBcY,CAAC,CjBfb,Ae0Bc,CT3BD,AZED,AKkCC,EOpCE,AWgBP,CAAU,ClBoBD,CCnCjB,ATAA,AGCgB,AuBcI,AlBoBF,CCnClB,ANCiB,EHDG,A0BeG,EjBfvB,AiBekB,AFWO,Cf1BzB,CTAA,C0Be4B,CFWC,Cf1B7B,AiBe8B,AlBoBzB,CgBTP,ErBzBE,AuBciC,AlBoBF,ECnCxB,AiBeC,CAAV,ClBoBqC,CAAC,CCpCtC,SDoCiC,CAAgB,WAAhB,CAA4B,IAA5B,CAA1B,GAA8D,IAArE;ARjCE,AeVM,AZWN,AuBcF,AlBmBD,AgBTC,KTnCE,CWyBI,AFUA,CEVC,GXjBH,AWiBM,EAAE,AFUA,GEVI,AFUD,CEVE,GAAG,EAAL,CFUO,CAAC,CEVG,CAA1B,IFUe,IAAkB,cAAjC;AfzBE,AMDD,AVLH,AqBsBE,AlBoBF,AgBVE,MEVM,AFUA,CEVC,CjBhBC,EiBgBE,EAAE,GjBhBG,AiBgBC,CAAC,AFUD,Ef1BE,CiBgBE,AFUD,EEVJ,GAAW,CjBhBD,AiBgBzB,CjBhB0B,Ae0BA,CAAC,Mf1BzB,Ie0BiB,IAAsB,WAAzC;AIdF,A/BWA,A6BLE,AJnCF,AE4CE,IIfF,EJeQ,GETC,AJnCA,CImCC,AFSE,CETH,EAAI,AFSE,CETN,CAAP,EENF,GAAA,CJeuB,CAAC,KF5CxB,CAA4B,CE4Cb,CIff,AN7BA,CE4CE,CF5C8B,EAAhC,EM6BA,AN7BoC,EM6BpC,QN7BA,EAA8C;AbkB1C,AmBWwB,AhBuBxB,AEvCF,ACIF,AWmBC,AJnCC,EM4B0B,IN5BpB,EbiBA,CGkCC,AGnCT,COhBY,CM4BgB,AdhB1B,CcgB0B,CN5Bb,EbiBA,EajBI,CAAC,CbiBD,CAAC,CGkChB,AUnDW,CAAS,EVoDlB,CgBxBsB,EnBXD,AmBWC,AbZ5B,AOhBe,CbiBa,AajBE,CRY5B,CAAY,CFwCD,CAAC,AUpDC,CM4Ba,CnBXpB,AmBWoB,AdhB1B,AQZkC,ERYlB,AQZH,CAAb,CbiBoC,CAAC,IGmCjC,GHnCwC,CAAC,CGmCjB,IHnCS,CAAc,IGmC/C,GAAoC,MHnCtC,CGmC6C,CHnCmB,AGmClB,WAA5C,GAA0D,IAD5D;AHjCE,AmBWJ,AhByBE,AGtDJ,AZoBI,AuBiBJ,AJpCE,AE2CA,CT5CF,CAAiC,EZoB7B,EMFE,AajBE,AE2CF,GrBxBE,CAAC,AmBnBG,AE2CF,CV/BN,CXOA,CMFS,AajBE,CbiBD,CNEA,AqBwBC,EV/BX,AQZe,CRYf,AQZgB,CbiBd,CAAc,ANEF,CYpBlB,AZoBmB,AmBnBJ,CRYX,ACbJ,AOCwB,CRYpB,IAAA,AQZW,CAAe,CRYpB,EXON,CmBnBW,CbiBT,CajB8B,EbiBA,AajBrB,CAAb,AE2C0B,Kf1BtB,ce0BJ,EAA+C;AfzB5C,ATCD,AcNE,ACIN,AZII,AmBpBF,AE2CE,IxBzBA,AwByBA,EV/BE,AQZE,GtBkBA,CAAC,AcNC,AQZE,ERYA,AU+BA,CF3CG,EE2CA,CVhCL,CQXS,CAAC,EtBkBhB,CsBlBW,CAAS,CtBkBF,AwByBC,CAAC,GxBzBpB,AsBlBW,CAAe,CE2Cf,GF3CA,AE2CiB,EF3CI,EAArB,CAAb,IE2Ca,CAA2B,UAA3B,EAAuC,WAAvC,CAAX;AfxBA,AKNE,ANwCA,AcpDJ,AE2CC,MV/BG,AQZE,GdoDQ,CcpDJ,CRYD,EAAE,AQZE,IAAI,CAAC,GAAL,CAAS,CdoDlB,CAAyB,GcpDhB,CRYI,ANwCb,AcpDwB,EdoDK,EcpDpB,ERUL,AQV0B,EAArB,CAAb;AtBkBC,AcLG,ANwCJ,ANNI,AoB9CJ,MRYI,GNwCG,ANNO,AoB9CP,GRYG,CNwCC,CMxCC,ANwCA,KNNR,CYrCI,AZqCiB,GMMzB,AcpDqB,CAAC,CdoDC,CNNnB,EAA6B,AoB9CZ,EAAO,EpB8CxB,EAAmC,AoB9ClB,EAAa,IAAb,EpB8CjB,AoB9CoC,EpB8CS,EoB9C5B,EAAyB,IpB8C1C,EAAqD,IoB9CpC,CAArB;AtBmBA,AcNI,ANwCF,ANNF,AoB9CD,AE0CC,IhBUE,EMxCE,AU8BA,EhBUE,CAAC,ANNA,GYlCG,AU8BA,EV9BE,CZkCC,AsBJA,CtBIC,AsBJd,EVlCQ,EN4CN,CAAiB,CNNN,EAAS,CMMC,CAAC,ENNX,EAAe,KMM1B,GNNW,EAAyB,QAAzB,EAAmC,IAAnC,CAAb;A0BnBA,AhB0BE,AExCE,ANwCH,ANNF,AoB7CD,AEyCE,MV9BI,AU8BA,GZUG,EgB1BP,Mdde,AU8Bf,EV9BiB,AU8BA,KIhBjB,CAAY,AhB0BV,AYVF,EAAyB,CZWrB,AYXJ,EAA4B,CVnCpB,CUmCR,EAAgC,CZWrB,AYXX,CIhBA,AhB2BY,CYXuB,CIhBZ,CJgBvB,YZWI,KAA4B,SAA5B,GAAwC,OAAO,CAAC,eAAhD,GAAkE,KADpE;AgB1BF,AhB6BE,AE1CE,AXOF,AKiCH,ANLD,IC5BI,EWPE,EcaJ,CzBNM,CAAC,GyBMP,GAAA,GzBNE,CyBMF,EzBNmB,CAAjB,CWPoB,EAAE,UAAU,UAAV,EAAsB,KAAtB,EAA2B;AAC7C,ANyCR,AgBZE,UAAQ,IAAR,CV7Ba,UAAU,GAAG,gBAAK,KAAK,CAAC,CAAD,CAAL,GAAW,MAAhB,CAApB;ALKJ,AmBQA,AdZG,AXMJ,AqBuBC,IfzBA,ImBQM,CnBRF,AeyBC,CfzBA,KmBQQ,EnBRb,CmBQgB,EnBRD,OAAO,EmBQK,CnBRF,CeyBP,CIjBY,IJiB9B,CfzBsB,GAAa,GmBQR,CnBR3B,EmBQ4C,EAA5C;AnBNA,AmBQA,AdtBM,ACWH,AZKL,ANmBI,AgBNA,AWSF,IT3BS,CDXT,GcsBM,C/BaM,AgBNA,AWSP,CV7BH,KcaW,AbXO,GaWJ,AbXO,CACzB,IAAI,GaUsB,A/BatB,C+BbuB,A/BaK,GAA5B,CgBNA,AWSgB,C3BHiB,AgBNA,CAAjC,EAAoC,CAApC,EhBMA,AgBNuC,EePzB,A/Ba2B,AgBNzC,CePqC,AbVzC,CAAuB,AFiBwB,AWS7C,EXTE,EePc,AfOiC,CePjD,CfOE,ChBMA,CkBvBJ,AFiBuD,CElB9B,AlBwB6B,CgBNlD,CEhBJ,CFgByD,GEhBrD,kBAAJ,CAAuB,WAAvB,EAAoC,KAApC,CAFyB,EAGzB,IAAI,kBAAJ,CAAuB,+BAAvB,CAHyB,EAIzB,IAAI,kBAAJ,CAAuB,0BAAvB,CAJyB,EAKzB,IAAI,kBAAJ,CAAuB,8CAAvB,EAAuE,KAAvE,CALyB,CAApB;AaYH,A5BTF,AcJC,AjB0BD,AgBNA,AWQiC,ExBxBjC,E4BSE,E/BaI,AgBNA,ChBMC,CGtBP,AagBQ,CbhBR,CHsBU,C+BbD,AfOE,CePD,C/BaG,AgBNA,ChBMC,EgBNE,EbhBhB,AagBA,CbhBA,CHsBA,C+BbE,GACE,OAAO,CAAC,G5BVZ,GAAA,G4BUI,KAAsB,E5BVT,IAAjB,EAAuB,C4BUnB,GAAkC,I5BVtC,EAA+B,C4BUc,CAAC,SAA1C,GAAsD,mBADxD;AAGA,A5BXA,AYqCA,ACrBF,AWQI,IIbF,EfKI,EbhBA,AagBE,CeLN,A5BXK,AYqCA,ECrBI,CeLT,C5BXI,AagBO,GDqBX,ACrBc,CbhBD,C4BWb,A5BXc,AagBhB,CeLE,AhB0Be,IgB1Bf,CAAA,E5BXA,AYqCsB,CAAC,CgB1BvB,A5BXwB,E4BWlB,GhB0BS,KAAmB,SAAnB,GAA+B,OAAO,CAAC,MAAvC,GAAgD,KAA/D;AgBzBE,A5BXA,AYsCF,AE3CJ,AjB0BE,A2BGG,MIbC,A/BUA,GiB1BN,AjB0BS,CAAC,CAAD,CAAH,C+BVO,EAAE,C/BUC,M+BXN,A/BWR,EAAsB,GiB1BxB;AciBM,A5BXD,ActBL,AjB2CI,AgBNF,CCrCF,CAAiC,IciC3B,AfIA,EAAE,GhBMG,C+BVC,A/BUR,CgBNS,CeJC,AfIR,IAAY,EAAE,CeJC,AdjCrB,CciCsB,AdjCtB,GDqCyB,CAAvB,EeNQ,AfMkB;AJdxB,AmBWE,AdhBN,AjB0BG,A6BHG,AbHF,AWQA,G3BJF,CYnBE,EmBWE,EfII,CJfF,AZqBC,A6BHO,AbHL,AWQF,CfvBA,EmBWG,AfIE,ChBMD,AgBNE,CeJD,AfIE,CAAC,EJfb,CIegB,ChBMD,CYrBA,AIeJ,CeJM,CAAC,C/BUC,CYrBnB,AIesB,CaGpB,C7BGoB,A6BHO,AbHlB,ChBMY,CAAC,CgBNG,CAAC,ChBMD,AgBNE,AWQX,C3BFI,CAAjB,CgBN2B,ChBMD,C6BH7B,AbHyB,EaGc,EbHH,EAA5B,AWQV,GELE,EAA8C,AbHH,EAAE,GAAG,EAAL,GAAU,EAAE,GAAG,EAAlD,CAAV;AJbA,AmBMM,A5BRN,AGEF,ANoBE,A6BHF,AJnCI,AEwCF,ErBtBF,GyBME,CFWI,E1BnBE,A0BmBA,CJnCM,AEwCP,CIZH,C/BUK,A6BHE,CvBjBX,ANoBU,CMpBV,CyBME,C/BcW,AyBtCT,CzBsCF,AyBtCmB,CtBgBJ,GAAG,C0BmBC,CvBjBrB,AuBiBsB,AJnClB,CnBkBJ,AuBiBqB,CAArB,AJnC6B,CtBgBJ,IsBhBrB,CnBkBJ,CmBlBoC,AEwChB,ErBtBpB,EHFoB,KAAoB,CsBhBpC,CEwCF,CFxC4C,EtBgBD,AGE7C,UHFwC,GAAkB,EAAtC,CAAlB;A4BcA,A5BbA,AGEA,ANoBD,A6BHD,AJnCA,AT+BE,AWQ+B,G3BH1B,GMlBH,AuBiBE,AJnCF,EtBgBI,A0BmBA,AbJF,ChBOC,AgBPA,EVbE,AuBiBE,CbJD,CAAR,EAAW,CS/Bb,EAAgB,EnBkBd,CuBiBmB,CAAC,CAAD,C1BnBG,A0BmBxB,G1BnB2B,SAAS,CAAC,IAAD,CAAT,KAAoB,SAAS,CAAC,IAAD,CAAT,GAAkB,EAAtC,CAAzB;AYuCA,ATpCA,ANoBA,A6BHF,AlBiBI,ANNA,AoB9CF,AT+BE,AWQA,IFvCF,EImCI,AbJF,EhBOE,AgBPA,AWQF,CZeG,ATpCA,ANoBA,AWcO,ANNA,EwBXH,AbJF,ChBOF,CgBPH,CaIU,AJnCF,CAAC,CAAD,CzBsCL,AyBtCL,CVsDA,AfhBA,C2BCa,CFvCG,CVsDC,AcnBE,CdmBD,ATpClB,AuBiBoB,AxBWlB,CC5BiB,AuBiBA,AxBWO,CUQN,AcnBtB,AlBiBI,CAA0B,CNN1B,AoB9CoB,CAAC,CpB8CM,AoB9CP,CVsDG,AJFvB,AcpDc,EdoDkB,CcpDN,IVsDR,CUtDpB,EdoDE,CIEkC,CJFM,CLlCb,GSoCY,GTpCzC,ISoCkB,CAAlB;AZtCA,AYwCA,ATrCD,AuBiBD,AlBiBA,ANNA,AoB9CE,AT+BE,AWOc,GrBvBlB,CmBfE,EImCI,AlBiBA,ANNF,AWfA,EbhBE,AagBA,CaIG,AxBWF,EWfE,CaIG,CxBWD,AWfP,CS/BQ,CAAC,CpB8CC,AoB9CF,CdoDK,ANNF,AoB9Cb,EImCiB,CAAC,AlBiBA,AcpDF,CImCC,CAAnB,CxBWA,CF/BsB,AQqCE,CRrCD,AQqCE,ANNF,CoB9CC,CAAC,CAAD,CAAN,GtBeZ,AsBfwB,CtBeC,EQqC/B,EcpDE,ItBeI,MAAuC,CAAC,CAA5C,EAA+C;AAC7C,AGIJ,ANkBE,A6BFF,AxBWE,AoB9CA,AT+BC,AWOG,ItBQJ,AoB9CA,CT4BA,CbbE,A0BoBE,CxBWD,CLTC,A6BFE,AxBWF,AsBRA,GEHK,AbJF,GXeP,AoB9CU,CpB8CC,AoB9CA,AT+BA,CaIG,AJnCJ,AT+BE,AWM8D,C3BA7D,A6BFE,AJnCf,AEuCI,CEJU,CAAhB,AbJiB,ChBMC,AyBrCA,AT+BT,ChBMP,CGtBkB,AagBA,CbhBC,AHsBA,GyBrCG,CtBepB,AsBfqB,CtBeC,AsBfF,CAAN,EEqC0D,CFrC9C,CEqC1B,CtBSF,CAA+B,CF/B7B,CsBfF,CpB8CkC,CAAC,IAAnC,EAAyC,GAAG,CAAC,QAA7C;AO5BA,AmBWA,A5BbC,AHsBC,A6BFJ,AlBiBA,ANNE,AoB9CA,AT+BE,AWQA,IftBF,AmBWA,AN5BA,EImCI,AbJF,CLqBC,CkBjBG,AbJF,AWQF,CftBE,AmBWA,CnBXC,AmBWA,C/BSE,A6BFE,AlBiBF,CoBxBP,A/BSQ,AWeA,AKrBA,EJdR,AajBU,AT+BA,AWQF,C3BFG,AWeA,AcpDA,CzBqCT,A6BFY,AlBiBhB,AcpDY,CbiBE,AiBkBG,AJnCf,AT+Ba,AWQF,C3BFG,A6BFA,AlBiBA,AKrBZ,ChBMa,A6BFjB,CxBWQ,AoB9CU,CbiBhB,CZoBkB,AWepB,CXfI,AKSF,CMMoB,CXfC,CWeC,AcpDA,CzBqCC,AWezB,AcpDyB,CzBqCrB,AyBrCoB,CdoDG,AcpDT,CzBqCU,EyBrCE,EEuCA,CAAC,EFvC7B,SEuC4B,EAAc,MAAd,CAA1B;AfpBF,AmBWA,A5BdD,AHsBK,A6BFN,AlBiBE,ANND,AoB9CC,AT+BE,AWQA,GxBjCJ,G0B6BM,AbJF,EaII,AlBiBA,AKrBF,GaIK,AJnCF,CzBqCC,AgBNA,EaII,AbJF,ChBMC,A6BFE,C7BED,A6BFA,AlBiBE,CXfH,A6BFb,AbJe,ChBML,AgBNN,CLqBe,EXfA,AyBrCjB,MzBqCI,EAAqB,CWeG,CAAC,CAAD,CAA5B;ARnCF,AcNK,AjB2BG,A6BFR,AlBiBE,ANNH,AoB9CE,AT+BE,AWQA,GF7CH,CRgBW,EYyBL,EAAE,AlBiBA,CcpDD,EImCI,GAAG,CZzBQ,AYyBP,CAAD,AlBiBE,CXfD,A6BFf,CZzByB,AjB2BT,CiB1BhB,ANyCmB,EXfA,CAAX,CiB1BJ,INyCuB,CAAC,CAAD,CAAzB,CAFyB,CAIzB,SM3CF,CAAuB,WAAvB,CADyB,EAEzB,IAAI,kBAAJ,CAAuB,aAAvB,CAFyB,EAGzB,IAAI,kBAAJ,CAAuB,aAAvB,CAHyB,EAIzB,IAAI,kBAAJ,CAAuB,aAAvB,CAJyB,EAKzB,IAAI,kBAAJ,CAAuB,8CAAvB,CALyB,CAApB;AF6CH,AErCJ,AjBoBS,A6BFP,AJnCE,AT+BD,MaIK,EAAE,CdmBD,EcnBI,AJnCF,CACL,CIkCS,GAAG,EAAhB,AJlCU,CAAC,CAAD,CAAN,GAAY,KADP,EAEL,CVoDF,GAA+B,EUpDvB,CAAC,CAAD,CAAN,EVoDoC,CAAC,AUpDzB,KAFP,EAGL,MAAM,CAAC,CAAD,CAAN,EVmDF,CUnDc,KAHP,EAIL,MAAM,CAAC,CAAD,CAAN,GAAY,KAJP,CAAP;AVwDA,AflBG,A6BFL,AlBkBE,AchDD,AEiCC,MEHI,EAAE,AlBkBF,CAAC,AgBfA,EEHI,EAAE,GAAG,ClBkBV,CkBlBN,GlBkBmB,CAAC,QAAlB,CgBfkB,ChBeU,gBgBf5B;AITA,A/BSC,A6BFH,AlBkBI,AchDL,ATyBC,AWQE,IIVA,C/BGA,C6BII,GEPA,AfEC,AWQA,CIVA,C/BSE,A6BFE,GEPT,AFQA,C7BCW,C6BDT,KAAK,CAAP,E7BCoB,AgBPA,CAAC,CaMT,AbNQ,ChBOG,CAAhB,A6BDO,AbNU,CAAJ,ChBOM,CgBPC,AWQT,EEFC,AbNC,CaMpB,CbN+B,EaO3B,AbPgB,CaMpB,AbNF,AWQE,GEAI,CAAC,EAAE,IAAI,EAAE,GAAG,EAAT,CAAF,GAAiB,EAAE,IAAI,EAAE,GAAG,EAAT,CAApB,KAAqC,EAAE,GAAG,EAAL,GAAU,EAAE,GAAG,EAAf,IAAqB,CAA1D,CAHN;AjBjBE,AmBYA,A/BQE,A6BCJ,AlBeG,Ac/CL,ATwBC,AWO8B,IfpB3B,CD6ByB,CkBRvB,AlBiBF,CkBjBF,EjBrBM,AiBqBC,CjBrBA,AiBqBP,C7BDS,CAAC,GAAG,CAAT,EAAY,CAAC,GYpBf,AZoBkB,CAAhB,EYpBkB,AZoBC,EYpBrB,AZoBuB,CAArB,EAAwB;AMnB5B,ANoBM,AgBNR,AWMM,ErBpBJ,MqBoBI,IrBpBJ,ANoBU,CMpBV,ENoBa,CAAC,CAAD,CAAH,C2BAK,GrBpBf,ANoBoB,CMpBpB,KNoBM,EAAsB,IMpB5B,GAAA,YAAA;AMCE,ANAA,ANoBM,A6BAR,AFDkB,MECd,EjBpBE,GNAG,AuBoBA,IjBpBI,AiBoBA,CjBpBC,ANAA,AuBoBd,C7BAe,CAAP,A6BAQ,IjBpBd,EAAoB,CNApB;AMCE,AGqCF,ATrCD,ANoBM,A6BAL,AlBgBA,AgBjBI,GrBrBN,CuBsBE,CAAC,CjBpBC,EiBoBE,AlBgBA,AgBjBA,CZkBC,CcjBL,CjBpBM,CAAC,IDoCK,AgBlB8D,CAEtE,CfpBF,GAAc,ADoCC,IICjB,GHrCuB,AGqCC,CHrCA,ADoCxB,EAA2B,AgBlB+C,CZmB1E,CYnBE,EflBA;AACD,AmBWD,AhB2BA,ATrCF,ANmBK,A6BAH,AlBgBE,IoBzBF,AFSA,CAAC,GAAG,CETA,CAAC,AFSL,EETA;A/BUC,A6BAF,AlBgBE,AgBjBC,GEFJ,E7BHS,AWUkB,CAczB,GkBlBK,E7BAE,E6BAE,AFDF,CAAC,GAAG,CECG,AFDP,EAAO,EECI,AFDF,CECX,EAAgB,AFDF,WAAW,CAAC,MAA7B,EAAqC,CAAC,GAAG,EAAzC,EAA6C,EAAE,CAA/C,EAAkD;AflBpD,AmBWA,A/BSE,A6BAF,AFDI,IIRJ,AFSA,CAAC,GjBpBG,AiBoBA,CETA,CAAC,AFSL,AFDI,C3BCG,CAAC,GYpBG,AZoBA,CYpBC,AZoBV,A2BDQ,E3BCI,CAAC,C2BDD,EfnBd,AZoBkB,CAAhB,CYpBkB,CZoBC,E+BTrB,A/BSuB,C+BTA,A/BSrB,EAAwB,O2BDK,CIR/B,AJQgC,EIRG,KAAI,CAAC,GJQG,CAAC,CAAD,CAAZ,EAAiB,MAAjB,CAA3B,SIRJ;AnBVE,AZoBE,A6BAJ,AC5BJ,AH2BO,IECH,CAAC,CjBpBC,EiBoBE,EAAJ,CjBpBM,CAAC,AZoBC,GAAG,CAAC,CAAD,CAAH,GYpBN,CAAe,AZoBC,MAAd,CYpBoB,CAAC,AZoBC,MYpBxB;AACD,AmBWD,A5BdF,AcAI,AjBuBI,A6BAP,AlBgBC,ERvCF,C0BoBO,KEND,A5BdN,AQuCM,CRvCN,AcAc,AYuBP,AlBgBA,MoBzBM,CAAC,C/BSC,AWgBb,CRvCF,AHuBQ,CGvBR,AQuCiB,EMvCb,CAAuB,KAAvB,EAA8B,GcchC,A5BdF,E4BcgC,C5BdhC,IcAI,EAA0C,IdAhC,KAAd,EAAmB,EcAf,EAAuD;AcevD,A5BdF,AYwCA,AExCF,AjBuBO,A6BAL,AlBgBE,AcjDA,AE+BA,IEEF,CAAC,CETC,AddE,ANuCF,EkBhBE,CdiBC,AfnBD,AyB/BQ,CIiCN,AlBgBA,CoBzBA,ApByBC,CoBzBA,AddG,CYuBD,CJjCP,CRUW,AjBuBF,AyBjCO,GIiCJ,C7BAC,CiBvBG,CAAC,AYuBF,AJjCf,CzBiCgB,AWgBhB,CICF,AfjBmB,A6BAnB,AlBgBmB,AcjDO,CzBiCR,CAAH,CeiBO,CExCxB,CjBuB0B,G+BTtB,ApByBA,CoBzByB,ChB0BE,AUlD3B,CVkD4B,AfjBnB,CyBjCyB,CzBiCJ,G+BTE,CAAC,OhB0BnC,SgB1BE;AACD,A5BdD,AYwCD,AExCD,AjBuBQ,A6BAN,AlBgBE,AcjDJ,AE+BG,IEED,CAAC,CZvBG,AQVF,EtBUI,A0BuBF,EAAE,C1BvBG,E0BuBA,C1BvBG,AHuBF,CiBvBG,CQVf,ERUkB,AYuBF,AJjCA,GtBUK,AHuBF,A6BAA,EAAjB,G1BvBY,IHuBF,CGvBmB,AcAA,GAAG,CAAhB,AjBuBe,GiBvBK,CdAxB,GAA4B,GHuBlC,CGvBsC,CHuBD,IiBvB3B,GAAoC,CAAtD,KdA0C,CAAU,KAAV,CAA5B,GAA+C,KAA3D;ASED,ATDC,AYyCF,AEzCA,AjBuBU,A6BAT,AlBgBE,AcjDD,ATyBE,ISzBF,Cd+ByB,CMrBvB,ANyCF,ERzCM,CaeM,GbfF,AcAF,EQVE,CtBUG,AcAF,AQVA,CzBiCC,AyBjCF,CAAV,CtBUgB,CAAC,CsBVD,GtBUhB,CaeE,CCfJ,AjBuBuB,AgBRO,ChBQN,AyBjCA,CAAC,ATyBrB,CSzBoB,CAAtB,ATyBgC,EAA9B,ChBQmB,CgBRe,ChBQN,CgBR5B,EhBQ+B,AgBRO,ChBQN,CAAC,AgBRjC,EAAwC,ChBQJ,CAAL,CAAZ,EAAqB,GAAG,CAAC,CAAD,CAAxB,CAAT,GAAwC,CAA5C,EAA+C;AYpBzD,AmBWE,AzBXF,ANqBY,AyBjCV,ATyBF,AWKE,ErBlBF,EmBZE,ETyBI,EeFA,AfEE,CWKD,EXLI,CVbX,CAAA,AUaa,CSzBD,CMuBC,ANvBA,CMuBC,ANvBF,ATyBI,CSzBd,CTyBF,ESzBkB,CzBiCC,CMrBnB,ANqBoB,CMrBpB,ENqBuB,C+BVrB,A/BUU,AyBjCY,CAAC,CMuBC,ANvBF,CAAtB,EE8BkB,ErBlBpB,GAAA,QqBkBE,ErBlBS,IAAX,EAAiB,QAAjB,EAAyB;AyBYrB,A5BdF,AcAF,AXGE,ANqBS,A6BDX,AJhCE,ATyBF,AWImC,IF7BjC,EMuBE,AddA,ADgBE,EbhBA,AGGA,AUaE,CbhBD,A0BuBA,CAAC,CETA,AFSD,AbPI,CeFF,A5BdC,AcAA,CdAC,AGGA,ANmBD,A6BCC,AbPE,CVbD,AuBoBL,AJhCK,CIgCZ,AJhCa,CAAD,ATyBI,CChBD,AQTb,CTyBF,CbhBE,AHwBe,CyBjCC,CtBSC,AGGb,CAAc,GyBWhB,CAAmB,AddvB,AXGM,AmBZkB,CnBYtB,AmBZuB,CRSC,AQTF,CnBYG,AmBZzB,IMuB4B,CAAC,UAA3B;AACD,A5BdC,AcAF,ATAJ,AFGM,ANqBQ,A6BDb,AlBiBG,AcjDA,ATyBF,AcpBF,AHwBM,InBpBN,AiBTI,EtBSE,EcAE,ANwCA,AgBpBF,CxBpBG,AQwCA,AKxBA,CbhBC,AGGE,CUaD,EVbI,CEHf,AiBTc,ATyBA,CSzBC,CtBST,AGGY,AmBZJ,ATyBL,CChBQ,ATAjB,AGwCI,AcjDA,EtBSe,AQwCA,AKxBA,AWIF,CVpBG,AXGE,AmBZF,CRShB,AXGmB,ANqBF,AgBRA,ChBQP,CiBxBS,CdAC,AagBA,ESzBE,ATyBxB,CRhBF,AFGM,AmBZqB,CAAD,CAAtB,IjBSJ,EAAA,CLAmB,IAAqB,IAAlC;A4BgBF,A5BfC,AcAC,ATDmB,AFInB,ANqBO,A6BAb,AlBgBM,AcjDF,ATyBH,AWGmB,EnBpBK,IGyCnB,ILrCM,AKqCF,CHzCe,AGyCd,AcjDA,CjBQc,EFIT,GAAG,IAAI,AmBZnB,CjBQqB,AGyCnB,CAAiB,CHzCE,EFIN,CAAU,GEJJ,AFIN,CEJM,AFInB,AKqCA;AICJ,AExCI,ATDJ,ARyBS,AWgBL,AcjDH,AT0BH,AWEQ,EZqBN,CUvDA,GReI,ENwCE,AgBrBA,ChBqBF,AcjDG,EzB2BC,CesBR,AExCU,CFwCV,EExCa,CUkB+D,C3BM7D,A2BJT,GVpBY,CAAC,AjBwBA,CegBnB,CAAA,CfhBsB,CAAC,CiBxBV,AjBwBW,EiBxBpB,CjBwBuB,CAAL,CegBtB,AfhBmB,A2BNyD,EAAxE,CZsBJ,AfhBgC,MAAb,GAAsB,GegBzC,GfhB+C,GAAG,GAAG,CAAC,CAAD,CAAtC,EAA2C;AYtB1D,ATFE,AYyCA,AExCC,AXEC,ANsBM,AWgBN,AcjDF,EbUF,GKJE,GdEM,CSER,CAAA,CGuCS,AExCA,AXEA,AmBXA,InBWI,CSsCC,ATtCA,CHHG,AsBRF,CAAC,CbUhB,ANCiB,ANsBA,CYvBjB,ATFoB,AGGhB,ANsBc,EMtBE,CAAC,ANsBA,AyBjCZ,CzBiCC,CGzBe,AYyCvB,AUjDA,CnBWsB,GAApB,EAAyB,EAAE,CAA3B,CMDJ,ATFoB,CGGc,EMDlC,CTFuC,KAAK,MSE5C,ITFuC,CAAgB,IAAhB,CAArC;ASGA,ATFA,AYyCD,AExCG,AXEE,ANsBG,AWgBN,AcjDF,AE4BG,GZmBJ,EJvB2B,CMfvB,AN0CF,ER3CI,AGGA,GNoBS,CiBtBL,AXEA,CAAC,AqBiBF,CrBjBC,AqBiBA,CVnBG,AXEP,EHHJ,AHyBa,A2BLF,CrBjBG,AqBiBP,CVnBQ,CUmBD,EAAE,EVnBL,CLCA,AKDU,AUmBF,KflBH,CKDL,CAAT,IUmB4B,CflB9B,AekB+B,CrBjBV,IAAP,CqBiBZ,CrBjByB,CqBiBY,CAAC,ErBjBT,CAAC,AqBiBW,CrBjBZ,CAAjB,AqBiBZ,ErBjBkC,AqBiBW,EAAE,CAA/C,EAAkD,GrBjBtC,CAAV;ASwCN,AEzCG,AXEE,ANsBK,AyBjCX,AE4BO,UAAA,MAAM,G3BKK,A2BLF,C3BKL,U2BLgB,CAAC,CAAD,CAApB;AflBJ,ATFA,AcED,AjBwBQ,AyBhCX,IbQI,ITFI,ESEJ,CAAA,MTFA,EAAe,CSEf,CAAM,eAAN,CAAqB,IAArB,CAAqB,IAArB;AACD,AmBaC,A5BfE,AKDJ,AFII,ANuBG,AWgBL,AgBtBI,GfrBN,CD2CE,IoB3BI,ApB2BA,CAAC,CR1CG,CKDV,EFIW,EqBiBA,CAAC,CrBjBR,EqBiBW,CAAJ,CxBpBU,AKDrB,AG2CE,CH3CU,AG2CQ,AgBtBF,EILI,A5BfE,AwBoBJ,GILK,AJKF,ExBpBM,CQ0C3B,CoB3BA,CvBhBF,AG2C8B,CgBtBD,CnBrBP,AmBqBQ,MhBsB5B,AgBtBI,CxBpBkB,CwBoBc,CAAC,GxBpBO,AwBoBJ,EAApC,EAAwC,CxBpBK,CwBoBH,CAA1C,EAA6C,QxBpBL,GAAoB,EAA1C,CAApB;ASIJ,AmBaE,A5BhBE,AcCJ,ATHA,AFKG,ANuBE,AWgBJ,AgBtBO,KrBxBN,EWKG,CTHL,ELEU,CcCD,AXEA,CWFC,AUmBF,CnBtBR,ESGa,CAAb,ATFE,ESEc,AUmBF,CVnBG,GAAG,ATFlB,AmBqBgB,CnBrBhB,ELCuB,EKDvB,CLEI,AcAN,ATFE,ESE0B,CAAC,CTF3B,CLES,EcAsB,ETFxB,EmBqB0B,CAAC,CnBtBpC,GSGA,EAA4C,AUmBF,CAAC,CAAD,CxBnBpC,AwBmB6B,EAAY,GxBnBf,GwBmBG,CAA3B,CxBnB6B,gBAAL,GAAwB,EAAlD,CADF;AcEF,ATDA,AFGE,ANuBD,AWgBJ,AgBtBQ,IVnBL,MAAM,CAAC,CAAD,CAAN,AXES,GWFI,SAAS,GAAG,KAAK,AXEd,CWFe,CAAD,CAAlB,CXEH,EWF4B,AXEQ,GWF7C,CXES,EAA2C,QAA3C,CAAP;AHFA,AcCF,AXEC,AwBDL,AHkBO,QVnBC,CAAC,CdDC,EAAE,AcCA,IdDI,EcCE,EdDE,CcCC,IAAI,CAAC,GAAL,CAAS,CdDpB,CAAJ,EAA4B,AcCA,CAAC,GAAL,CAAU,IAAI,CAAC,EAAL,IAAW,CAAC,KAAK,CAAC,CAAC,GAAG,CAAL,CAAN,GAAgB,EAA3B,CAAD,GAAmC,GAA5C,CAAT,CAAjB;AdAI,AGGL,ANsBC,AgBRE,GVzBJ,KHQM,CaiBQ,EhBQL,CAAC,GAAG,CAAX,GGzBe,CAAC,IAAD,CAAX,CaiBF,CAA4B,CbjBN,CAApB,CaiBF,EAA+B;AeDjC,A5BfI,AYyCN,AEzCE,AXIF,ANqBC,AgBRD,AWEI,EZsBJ,ICxBM,CAAC,CeFD,A5BfA,AcAA,CAAC,CDiBG,EDwBV,AEzCU,CFyCV,ACxBa,CAAC,KeFG,CfEjB,EeFoB,AhB0BpB,AEzCE,CdAmB,AYyCrB,CZzCsB,AcAA,IdAD,CAAf,C4BeJ,AhB0BF,EZzC8B,CAAxB,AYyCN,YAAA;AZxCK,AYyCH,AEzCE,AjByBL,A2BNI,MVnBC,CAAC,GAAG,CFyCC,KAAK,IEzCV,CFyCF;AgBzBA,AhB0BD,AEzCE,ATFD,AR4BJ,AyBlCM,ATyBJ,GDsBA,CPzCE,CSAA,EDmBG,CeFC,CvBjBA,AiBNQ,CjBMP,CSEE,ADiBA,CRnBP,AQmBQ,GCjBG,ADiBA,CCjBC,ADiBd,EAAgB,CCjBC,ADiBA,CCjBC,EDiBE,CAApB,EAAuB,CAAC,CeFC,CfEzB,ECjBS,ADiBmB,ECjBE,CQR1B,CMuBF,ANvBqC,EMuBL,INvB9B,EAA2C,CAA3C,EAA8C,CAA9C,EAA+C;AbUnD,AmBcI,A5BhBA,AY2CJ,AE1CI,ATDF,AiBPF,ATyBE,AWCA,EfjBF,IKDI,AQRA,CRQC,CdDC,AsBPN,CbSA,AeiBO,CfjBP,AKDQ,AQRA,CRQC,CQRT,ObSA,ATFiB,CSEjB,ATFkB,CcCd,GdDa,CAAb,CSEJ,GAAA,EeiBoB,UfjBpB,SeiBE;AfhBA,AmBcE,AdfD,ADiBD,AWAuC,QXAnC,EeFE,CnBdC,GIgBG,EJhBE,CmBcC,AfEA,CeFC,AfEd,EJhBA,WmBcM,KAA0B,SAA9B,EAAyC;AnBb5C,AmBcK,A5BjBF,AsBPJ,AT0BE,AcfE,AHeA,GflBJ,GaRI,CAAC,CMwBC,AfEA,CcfQ,CLXN,CtBOC,CwBmBC,CXAC,EbnBE,CAAC,AsBPA,AT0BA,CS1BC,CAAD,CMwBG,A5BjBA,AsBPjB,CtBOS,AamBS,CS1BC,AT0BA,CeFC,A5BjBA,AwBmBA,CGfhB,C3BJkB,AamBR,Acfe,CdeN,EbnBE,CamBC,CeFC,AfEA,AcfvB,CCawB,AfEF,CAAH,Acfa,CdeN,CAAP,CAAT,CAAZ,CbnBgC,CAAC,I2BI/B,ECaE,A5BjBF,A2BI4C,E3BJL,CAAC,GAAG,EAA3C,EAA+C,EAAE,CAAjD,A2BIA,E3BJoD,A2BIK;AlBC7D,AmBaK,A5BjBC,AcCJ,AQRA,AKWF,AHeM,IVlBJ,AQRA,EAAE,AKWA,GLXG,CRQC,CAAC,CdDC,AcCA,AaGV,GbHa,AQRA,CRQL,AQRM,CRQZ,AQRW,CAAN,ERQW,CAAhB,AQRiB,CAAjB,OtBOyB,SAAS,CAAC,CAAD,CAA9B,EAAmC;AACjC,AcCP,ATDC,AiBPD,ATyBC,AWCM,GF5BR,CjBSE,ImBmBM,CnBnBF,AiBPC,ATyBA,CblBC,AKAD,GiBPI,ATyBA,CRlBT,AQkBU,EWAwD,CXArD,AWEP,CXFQ,CblBC,AsBPA,CAAC,CAAD,ATyBE,CSzBR,ATyBT,EAAoB,CSzBC,ATyBA,CSzBhB,EAAmB,ATyBA,CAAxB,CWAkE,CXAvC,CAAC,AWD1B,EXCF,EAAgC;AeD9B,A5BjBgB,AKElB,AFGF,AmBXE,ATyBE,AcfJ,ExBCA,EmBXE,EMuBE,ANvBA,AKUA,GLVG,CAAC,ATyBE,EVdV,CAAA,AmBXW,GKUG,EdeI,CSzBD,CAAC,CAAD,ATyBI,AcfF,CCaC,AzBZpB,AmBXE,CnBWF,EyBYuB,AfEE,CeFD,AfEE,CeFD,EfEJ,CAAS,Acf9B,EAA8B,CdeG,CAAC,CVdlC,AUciC,CAAH,CAAO,CeFjC,AzBZJ,AUc8B,CAAT,CAAjB,QVdS,IAAb,EAAmB,QAAnB,EAA2B;AyBaxB,A5BjBO,AcCV,AXIE,ANsBE,AyBjCH,AKUC,AHgBE,GF5BG,EMmBL,GzBNI,CWJC,AjB0BO,AyBjCP,AKUA,C3BJG,C4BiBD,AzBZP,EwBDS,AHgBF,CGhBG,AHgBF,CIHG,AdhBb,EaGe,AHgBF,CGhBN,AHgBE,CxBpBU,CAAC,A2BIF,AHgBF,CxBpBG,CADsD,A2BKrD,AHgBF,CxBnBR,CH0BN,CAA0B,A8BvBP,AHgBF,G3BOjB,EAA+B,A8BvBP,CAAC,CCaC,E5BlB2C,CAEnD,AH0BlB,A2BP2B,CAAC,C3BOU,A8BvBxC,C3BLuE,C4BkBhE,A5BlBD,A2BK6B,C9BuBjC,A8BvBkC,CCaC,C/BUM,A2BPzC,CGhBqC,CHgBD,CGhBtC,AHgBuC,EGhBI,CHgBD,CGhBG,CAA7C,AHgBE,EGhB8C,AHgBF,EAAE,CAA9C,EAAiD;AIFjD,A5BhBG,AY0CP,AE1CD,AjB0BC,AyBjCE,ATwBE,AcdA,AHgBE,EZuBN,EUjDE,EAAE,AKUA,G3BPE,AH8BC,AyBjCA,CMuBC,ANvBN,ATwBM,AWEF,EZuBN,CAAA,CfhBY,CG1BC,C2BGC,AHgBF,CIHG,A/BUA,A8BvBA,CCaC,AfCA,AcdF,CAAV,C9BuBJ,A2BPgB,CXFG,CDyBnB,AfhBoB,A8BvBA,CfuCpB,GCzBI,CcdqB,CdcC,AcdA,CCalB,ADbiB,AHgBA,CGhBrB,AHgBsB,EZuB1B,EgB1BgC,ChB0BhC,IgB1BI,CJGgC,CIHG,AJGF,CAAD,CAAX,EAAgB,EZuBzC,SYvByB,CAAnB;AIFA,A5BhBE,AY0CN,AEzCJ,AXEI,ANuBA,AyBjCD,ATwBK,AcdH,AHgBE,QIHC,AzBbA,ANuBE,AgBTF,EbjBE,CY0CC,AfhBE,EMvBA,AUcA,CVdC,ANuBE,EegBA,ACzBA,ChBSG,CAAC,CG1BD,EGGX,CAAc,CSuClB,AfhBe,C+BVK,A/BUpB,AgBTI,EVdA,CyBamB,AzBbvB,EAAyB,GyBarB;AACD,A5BjBe,AY2CnB,AP1CC,AFGE,ANuBF,AgBTI,GDuBN,CPxCE,AR0BA,G+BZE,A/BYC,CAAC,AgBTA,CRjBA,CAAC,AFGG,EEHR,CuBgBS,AvBhCW,AFmBT,ANuBR,CQxBH,ARwBA,AgBTU,EVdI,CNuBD,AgBTA,CAAT,EVdc,ANuBF,CMvBG,ANuBF,GAAD,CAAhB,EMvBE;AyBcE,A5BjBI,AY4CV,APzCE,AFCE,ANuBF,AyBlCF,ATyBK,AcfH,AHgBE,I3BQF,A8BxBA,ExBCE,AmBXA,CzBkCC,AyBlCA,CMwBC,A/BUA,CMvBC,CHJG,AsBPF,AKUA,C9BwBH,CMvBK,ANuBR,C8BxBS,E9BwBE,CMvBC,AmBXA,CAAC,CzBkCb,AyBlCY,CMwBG,A5BjBE,AsBPnB,CtBOoB,CAAD,AGIT,AmBXS,CMwBC,A5BlBuD,AGKvD,CHHV,A2BER,ExBCQ,CAAN,CHLuE,C4BkBjD,A5BhBX,C4BgBY,G5BlBgD,EAEtD,E4BgBa,CAAC,A5BlBwC,CAAnE,U4BkBkB,CAApB;AACD,A5BhBE,AKEL,ARwBA,AyBlCA,ATyBC,AcfF,AHgBE,GGrBH,CLLE,EzBkCE,AyBlCA,GAAG,AKUA,E9BwBL,IyBlCW,CAAC,CAAD,CAAN,GAAY,CAAjB;AbWF,AmBcG,AvBdD,AFAE,ANwBF,AyBlCD,AKUC,ElBAF,CaZA,CKYE,E9BwBE,GYxBJ,AZwBE,AyBlCK,CbUP,AkBAQ,CxBAC,EmBVE,AKUA,ExBAE,CAAC,EwBAE,ClBAhB,ANAiB,AmBVA,AKUA,ClBAjB,ANAI,AmBVc,CAAD,CnBUG,AmBVT,CnBUU,CwBAV,CLVY,CbUvB,ANAwB,AmBVjB,AKUL,ELVwB,CbU1B,ANAI,EAAyB,EAAE,CAA3B,EAA8B,GMA3B,GAAP,EAAU;AACR,AmBeA,A5BlBI,AGGA,ANwBL,AyBlCC,ATyBA,AcfD,AHeC,IFzBA,EAAE,EbUE,ANAA,AUeA,CSzBC,CAAC,CnBUC,CHHC,AGGA,CMAC,ANAF,AmBVE,ATyBA,CVfL,GMAJ,ANAa,CUeC,CJfC,AaVA,ATyBf,CSzBgB,CtBOC,AsBPF,ATyBE,CSzBjB,ItBOsB,KAAd,IAAuB,GAAG,CAAC,EGGX,IAAX,EAAiB,IAAI,CAAC,CAAD,CAArB,EAA0B,CHHnC,EAAmD,KGG1C,CAAT;AMCF,ATHI,AKEN,AFCG,ANwBN,AyBlCE,ATyBG,AWDO,GF1BJ,MAEA,CtBOC,GakBG,IAAP,CADe,CbjBF,AakBA,GblBG,AKEX,KICM,ATHP,AKEN,KICkB,OAAhB;AACD,ATHK,AKGN,AFAC,ANyBL,AyBnCI,ATyBC,AchBH,AHeI,IFxBF,CnBIA,AUO0B,CSXxB,AT2BF,GS3BK,AKSA,CLTL,CnBUO,GqBcC,CGfV,GHec,KAAJ,CAAU,gCAAgC,IAA1C,CAAN;AxBhBG,AGGH,AuBwBA,AJlCH,AKSF,AHeI,MrBdC,GAAG,AuBwBO,GvBxBJ,WuBwBN,CAAyB,YvBxBR,IAAX,EAAwC,AuBwB9C,EAA2C,EvBxBrC,EAA+C,QAA/C,CAAN;AMAF,ATFG,AY0CL,ATvCG,AuBwBH,ACxBF,AHlCE,EZyEA,OHxCO,GGwCP,CHxCW,AGwCX,CHxCY,GAAG,CAAR,EAAW,EAAE,AGwCpB,CAAA,EHxCuB,KAAK,CGwC5B,GAAA,QHxCuB,CAAkB,GGwCzC,GHxCE,EAA+C,CAAC,GAAG,EAAnD,EAAuD,EAAE,CAAzD,EAA4D;AAC1D,AGwCF,AE1CE,AXGF,AuBwBA,AJnCF,AT0BE,QAAM,CClBM,AQRP,EVkDE,AUlDA,AT0BE,GS1BC,AT0BE,EDwBA,AUlDP,CT0BU,CAAC,CClBd,AQRa,CRQQ,CQRN,CVkDjB,EUlDoB,AT0BL,CClBb,ADkBF,CS1BF,CRQgC,MLEd,IKFd,CLEmB,CKFqB,WLE1B,CAAkB,CAAlB,AKFd,CLEA,CKFqD;ALGtD,AmBcD,A5BjBE,AY2CH,AE1CD,AQRD,AT0BG,AWFF,GZwBA,CgBxBE,AfEA,EClBI,CDkBD,CbnBC,AamBA,CeFA,AJAC,CIAA,EdhBK,EDkBP,CClBU,ADkBb,AWFF,GXEgB,CbnBC,CAAC,AcCE,CAAC,ADkBF,CeFjB,AfEkB,CAAD,CbnBF,AamBf,CeFoB,A5BjBlB,EcCJ,ScgBE;AAEA,AhB0BF,AE3CA,ATEE,AiBTJ,ATyBI,AWFH,InBdG,AQgBA,EClBI,CDkBD,CAAC,CRhBA,AQgBD,CRhBE,AQgBL,GAAS,EClBI,CDkBb,CRhBA,AQH0B,CCCV,ADoBhB,ERlBe,IAAf,OSF6B,GAAG,CAAhB,GAAoB,aAApB,GAAoC,CAAtD;ALEE,ATHE,AcEJ,AXAyB,AqBiB3B,IrBjB2B,EWArB,GLCG,CTHC,EcEE,AXAc,CAAW,EWAtB,IXAW,EMCtB,ATHiB,CSGC,ATHA,AGEwB,GWA5C,AXAwB,CHFL,CAAX,CSGN,GAA2B,CAA3B,ATH4B,CAA1B,EAA6B;ASI/B,ATHI,AKIJ,AFFA,AN0BE,A6BCF,AbRA,QRjBI,CIDC,AZyBO,AgBPP,EVnBE,CHFC,CSGR,AIkBS,CbrBC,AGEV,AuB2BU,AbRA,ChBOR,CYzBU,AZyBO,CG5BN,AaqBA,CRjBC,AQiBA,CJlBd,AZyBE,EAAsB,AgBPP,CAAjB,CRjBmB,CqByBnB,AbRoB,ChBOlB,AgBPmB,CaQD,C7BDQ,CgBPJ,CAAxB,EAA2B,CbrBC,AKI5B,AQiB4B,CbrBC,CKIC,AQiB9B,EAAgC,CbrBJ,CAAxB;AACA,AcCN,ATGI,AFFH,AN0BD,A6BCI,AbRA,GVhCJ,GWYI,ATGA,ARwBE,IgBPI,CRjBF,CSHE,ATGD,CqByBE,CbRG,CbrBD,AH4BE,EiB3BA,ADoBE,ChBOC,AgBPA,GAAG,CAAC,ChBOC,A6BCF,AbRA,ChBOG,A6BCF,AbRJ,CRjBd,AQiBqB,CCpBzB,ATGuB,AQiBL,CAAD,CCpBS,EdDE,AaqBE,CbrBD,AH4BX,CAAc,CgBPC,CaQZ,AbRa,CbrBN,AaqBK,CbrB3B,AKIF,ARwBc,A6BCgB,AbRJ,CAAO,CAAP,CAA1B,ChBOoC,IAAtB,GAA6B,CAAC,IAAD,CAA/C,C6BCqB,CAAjB;AjB1BF,AKDA,ATGC,AFDH,ANyBA,A6BCG,M7BDG,EY1BA,AKDA,IjB2BM,CY1BD,EZ0BI,EY1Bb,AKDa,ELCE,CKDC,CAAhB,EAAmB,CjB2BG,CAAC,MAAzB;AYzBI,AmBgBF,A5BnBI,AcEF,AYoBJ,AbDI,AcjBA,ICeF,KAAI,ADfQ,ClBDJ,AmBgBH,CfEE,IbrBI,AaqBA,CJlBG,AIkBF,CbrBC,ESGI,ATHb,AaqBW,CAAb,CbrBe,CaqBC,CAAC,CJlBG,EIkBA,AcjBpB,CCeF,AfEuB,AcjBO,GCeL,AfEC,CJlBT,AIkBf,CcjBA,CdiB2B,CJjBvB,AIiBwB,AcjBO,EdiBnC,EAAgC,CJjBvB,KkBAT,ElBDe,AmBgBjB,ADfiD,GlBC3C,GAAG,CAAC,MkBDR,EAA4D,oBlBCxD,EAFJ;AAGA,AmBeF,A5BpBM,AcEJ,AjB0BJ,A6BED,AbTO,AcjBN,MlBCI,AKHA,AaEA,C9BwBC,IAAI,CYvBC,AKHA,AjB0BA,AgBPA,CJhBC,AIgBA,EbrBE,AcEA,AjB0BA,CAAb,A8BxBc,CdiBC,ChBOC,AgBPV,ChBOW,CiB1BC,ADmBA,CCnBC,AaEA,C9BwBC,EYvBhB,CAAmB,CKHV,EAAT,AjB0BJ,EYvB4B,AZuBA,A8BxBxB,C9BwByB,EAA7B,CG5BQ,A2BIwB,C3BJC,AH4BA,EYvB7B,ETLI,A2BI6B,E3BJE,G2BIG,UAA1C,E3BJQ,A2BI8C;A3BH/C,AcEJ,ATCF,ARyBC,A6BGJ,AbVU,AcjBN,I9BwBA,CiB7BA,EjB6BG,CAAC,C8BxBC,CdiBC,CCnBC,AjB0BA,CAAC,CgBPC,AcjBA,CdiBC,AcjBA,CdiBD,CAAH,CAAO,AcjBA,C9BwBV,AgBPG,AcjBD,C9BwBL,C8BxBgB,E9BwBE,AgBPA,AcjBA,CdiBZ,EcjBe,KAAK,C9BwBC,A8BxBA,C9BwBC,CAAD,CAA3B,G8BxBA,EAAmC,CAAC,GAAG,EAAvC,EAA2C,EAAE,CAA7C,EAAgD;AlBC9C,AKFA,ATEJ,ARwBC,AgBPM,AcjBH,MbFA,AaEA,GdeE,CJfE,EKFE,GLEG,AKFA,ADmBA,CcjBC,CAAC,CAAD,CbFG,AaEb,ElBAI,CkBAY,EbFP,CAAU,CLEC,CkBAC,CAAC,CAAD,CAArB,CbFS,CAAT,SLEA,EAA0B;AACxB,ATLA,AY6CN,AE1CG,AjB0BJ,AgBPS,AcjBL,EfwCH,QCvBQ,EDuBR,CHxCW,AGwCX,ACvBW,CAAC,CbtBC,AasBF,CAAH,CAAO,CAAP,IDuBR,CAAA,ACvBqB,EJjBf,CAAkB,ATLA,CAAC,AasBA,GJjBnB,AIiBsB,CJhBpB,ATNgB,CAAlB,CasByB,CAAC,CAAD,CAAH,CAAO,CAAP,CDuB5B,ACvBQ,GDuBR,SHvCe,GAAP,AGuCR,EHvCoB,sBAAa,UAAzB,EAAqC,KAAK,MAA1C,EAAkD,IAAlD,CADF;AAGD,ATPA,AY6CH,AE1CD,AjB2BH,AyBnCM,AT2BG,SS3BO,EVkDL,KAAK,WUlDV,CAA6B,EVkDxB,IAAuB,AUlD5B,EAAqC,UAArC,EAA+C,SVkDH,KAAK,MAArB,CAA9B;AgBxBA,AhByBD,AUlDD,AT2BK,AclBH,GfuCF,CgBvBE,ADhBA,KCgBI,ANzBC,AKSA,CCgBA,EDhBG,OLTO,CAAC,EKShB,CCgBA,GAAqB,ANzBN,EAAS,KMyBI,CAAC,INzBK,CAAC,CAAD,CAAnB,EMyBf,ANzBuC,UAAU,CAAC,CAAD,CAAlC,CAAjB;AbYI,AmBeF,A5BtBE,AY+CJ,AE5CA,AXCA,AmBRD,AT2BI,AclBF,ExBDD,IMGI,CKJC,ELIE,CAAC,CKJC,CAAC,AXCV,CHJW,AGIX,EWDa,CLIT,AKJJ,EAAgB,CAAC,GdHb,AcGgB,AXCpB,CAAA,KWDA,EAA4B,CAAC,EXC7B,EWDiC,CXCjC,QWDA,EAA4C,AXCjC,IAAX,EAAiB,QAAjB,EAAyB;AMItB,ATPA,AcGD,AXCA,AmBPJ,AT0BG,GAnCkC,CCejC,ADsBF,IVrBQ,EWDA,CAAC,AXCE,CWDH,CAAN,GAAa,MAAM,KAAK,CAAC,CAAD,CAAZ,GAAmB,SAA/B;ALKD,ATPA,AcGC,AXAY,AwBCd,GlBlBA,AT9BA,Cc+CE,KaCK,CbDC,CAAC,CAAC,EaCV,CbDa,CAAL,CAAN,GACG,MAAM,IAAI,CAAC,IAAL,CAAU,IAAI,CAAC,GAAL,CAAS,KAAK,CAAC,CAAC,GAAG,CAAL,CAAL,GAAe,MAAxB,CAAV,CAAP,GAAqD,IAAI,CAAC,EAA1D,GAA+D,EADjE;ALMF,ATPA,AcGC,AXFoC,AwBEtC,IxBFsC,QAAD,CAAW,MAA7C;AEGF,AqB2BI,AbRJ,AclBF,EtBDE,IQmBM,CAAC,EaQO,CbRJ,ERnBV,CAAA,CQmBc,KAAJ,CAAU,CAAV,CRnBV,AQmBA,CRnBA,GAAA,EqB2BI,CrB3BJ,AqB2BkC,UrB3B9B,CqB2BA,ErB3BJ,AqB2B+C,ErB3BxC,KqB2BH,EAAoD,kBAApD,EAAsE;AETxE,AdlBF,ATCE,AFHA,AuB8BF,AFXF,IICI,EFUI,ErB3BA,AFHA,CyBoBA,AdlBC,AUiBA,CICA,CzBpBL,EEGA,AFHS,EWEX,QY4BuB,CEVrB,AJDJ,CAAyB,CEWG,CEVF,IAAtB,KJDJ,EAAsC,MEWH,AFXnC,EAA4C,KEWF,GAAG,GAAjB,EAAsB,GAAtB,IAA6B,GAAvD;AERE,AdnBH,AXFK,AN4BA,A6BEJ,AbTA,AWFA,MrBnBI,AuB8BE,AFXF,CEWG,AbTF,EhBOS,C6BEJ,AFXF,CXEC,CAAC,CVrBC,AqBmBA,CrBnBC,AuB8BE,AFXd,C3BSI,A6BEW,AbTF,ChBOQ,AgBPP,CVrBH,CAAP,AuB8BM,C7BFN,A6BEe,AbTF,CAAjB,ChBO0B,CgBPN,CAAC,ChBOjB,EAAyB,A6BEH,CbTD,CAAzB,EAA4B,CAAC,EAA7B,EAAiC,QaSvB,CAAV;AdeA,AP1CE,AFFC,AN4BH,A6BEA,AbTE,AWFF,EZyBA,ECvBE,CVvBA,AUuBC,ChBOG,A6BEA,AbTF,AWFE,C3BSC,AgBPJ,CRnBG,AQmBJ,CWFO,C3BSC,CM5BD,AUqBA,CDuBT,AYzBY,CZyBZ,AP1CW,AR0BE,CAAC,AgBPF,CVrBC,AUqBA,CAAD,CAAH,CaSS,AbTF,CAAP,CRnBH,AFFY,CAAC,AN4BT,A6BEW,CdcrB,AfhBsB,CegBtB,ACvBqB,AWFE,CnBjBD,AmBiBE,C3BSd,CAAV,AgBPwB,CAAC,CVrBZ,AUqBW,CRnBG,AFFA,AUqBN,CAAO,AWF5B,CXEqB,CAAnB,CVrBW,CAAJ,EEEa,AFFY,CS4ClC,AP1CmC,EqB4BI,CdcvC,Gcd2C,CAA3C,OrB5BsB,CO0CtB,AP1CkD,GAA5B,CAApB,EAAsD;ALHxD,AY8CE,AP1CE,AFFA,AN4BJ,A6BEA,AFXA,ExBrBA,IKII,AR0BE,A6BEA,AFXF,ExBrBJ,AwBqBM,CxBrBN,EY8CS,AP1CA,AFFA,AN4BE,A2BTF,GnBjBG,AR0BE,CM5BD,AN4BE,A6BEA,CdcD,AT5CA,EHFd,AH8BkB,A6BEA,C1BhClB,AKIiB,AFFA,AN4BE,CM5BV,AN4BT,EM5BoB,AuB8BE,AFXF,CEWG,AFXF,CrBnBC,EEEV,AqB4BM,AFXM,CnBjBC,AFFA,AuB8BE,CdczB,CcdgB,AFXS,CnBjBf,AmBiBQ,CnBjBhB,AFFyB,AuB8BE,AFXtB,CrBnBqB,AqBmBA,CAArB,CxBrBT,AwBqBA,GxBrBA,CGEI,EAAkC,CAAC,EuB8BrB,CvB9BwB,AuB8B1C,EvB9BI,EAA0C,CHF9C,CGEgD,CAA5C,EAA+C;AHDjD,AY8CD,AP1CE,AFFG,AuB+BN,AbXE,AWDF,GZuBA,GcXI,AFZA,EAAE,CxBrBC,A0BiCA,AbXA,EWDE,CEYC,CvB/BC,AUoBA,CAAC,EaWE,CAAC,AbXA,CAAC,CbtBd,EasBiB,CaWT,AbXR,AWDkB,CxBrBC,A0BiCA,AFZA,CEYC,AbXA,CAAC,CWDC,CEYC,EbXE,AWDA,CXCzB,AWDkB,CEYV,AFZD,CrBnBH,AuB+BN,AbX8B,AWDA,CrBnBC,AUoBA,AWDtB,CAAT,CXCE,EVpBiC,AUoBA,CVpBC,CHFT,AGEQ,CAA7B,EAAkC,EHFR,MGE1B,IHFe,CAAnB;ASQF,ATPC,AY+CD,AT7CK,AN2BL,A6BIA,AbXI,EJfJ,CTTA,GH+BI,A6BIA,AbXA,GJfJ,AiB0BO,AbXA,CJfP,AIeQ,ChBOR,AgBPO,CaWG,AbXN,ChBOO,AgBPA,CAAP,EaWU,CAAC,EjB1Bf,AIeiB,CJfjB,EiB0BU,AbXU,CaWC,AbXA,CaWC,AbXF,CaWG,AbXN,CJfjB,AIewB,CAAP,CaWS,CjB1B1B,EiB0B6B,AbXA,CAAC,CAAC,CaWC,AbXF,CAA1B,GaWiB,CjB1Bd,GiB0BiC,EAA9B,CAAV,EjB1BA,EAAe,CAAI,CAAnB;AAEA,AmBcE,A5BrBF,AKEE,AFDC,AN2BD,A6BIF,AbXG,AWFH,IIEE,A/BOA,CM/BO,CuBmCL,C7BJC,A2BTA,C3BSC,C+BPA,AFWC,CEXA,CvBnBE,AFDA,AqBkBA,CEaC,AFbA,CEaC,C7BJT,CAAW,A2BTA,CnBjBX,AR0BA,A6BIY,AFbd,E3BSgB,A2BTA,C3BSd,A6BIe,AFbA,CIEf,EFWkB,AFbA,CIEA,EJFpB,CEaU,CEXR,AJFuB,CAAC,CEaC,CFb3B,EEa8B,AFbA,GEaG,EAAjC;ArB7BC,AFDG,AN2BH,A6BID,AbXC,AWFC,EEaF,CrBpCA,EqBoCG,GAAG,AFbE,EAAE,CrBlBD,CuB+BC,CAAC,AFbE,IEaP,CAAU,GAAG,GAAG,AFbE,CAAC,CAAD,CAAX,CAAe,CAAf,CrBlBT,AqBkBF,CrBlB2B,EuB+BvB,EvB/BF,EAA+B,AuB+BA,QvB/B/B,CuB+BJ;AEXC,AvBjBD,AFFG,AwBEC,AHgBF,QAAM,CGhBM,CHgBJ,GAAG,SGhBT,CAAwB,CHgBJ,CAAC,CAAD,CAAX,CAAe,CAAf,CAAX,GGhBE,EAAkC;ACmBtC,AzBpBC,AN0BD,A6BKA,AbZA,AcjBA,AHgBE,GrB7BF,CqB6BE,EEaE,EFbE,C3BQC,A6BKA,AbZA,CAAP,EWAI,CEYO,C7BLX,C6BKA,EAAe,OC7BP,SHiBM,CGjBI,CAAC,AHiBH,GAAG,EAAf,EGjBI,EAAR,CHkBK,CGlByB,GHkBrB,IAAI,CAAC,EGlBd,CHkBS,CAAS,qBAAU,EAAV,CAAT,CAAJ,GAA8B,IAAI,CAAC,GAAL,CAAS,qBAAU,EAAV,CAAT,CAD/B,CADF;A3BSH,A6BKG,AJrCE,ATyBL,AcjBC,AHkBE,IEWA,AFXA,EAAE,CEWC,EJrCS,AE0BP,CEWC,CAAN,AFXA,YF1BE,AKQa,CLRY,OAAzB,EAAkC,AKQtC,EAA6B,KLRzB,EAAyC,GKQ7C,EAAyC,cAAzC;AxBFF,AN4BA,A6BII,AJrCF,AT0BF,AclBC,AHkBG,IEWA,AFXA,EAAE,CEWC,EvBhCP,AmBJI,AEyBK,EEWE,AFXP,CEWA,IJpCO,CAAC,CAAD,CnBIX,AmBJI,IAAc,OAAO,CAAC,CAAD,CAArB,IACA,OAAO,CAAC,CAAD,CAAP,IAAc,OAAO,CAAC,CAAD,CADrB,IAEA,OAAO,CAAC,CAAD,CAAP,IAAc,OAAO,CAAC,CAAD,CAFrB,IAGA,OAAO,CAAC,CAAD,CAAP,IAAc,OAAO,CAAC,CAAD,CAJvB;AnBlGF,AuBwIG,AJhCF,AKID,AHiBG,CrB7HH,CAAyB,eAAzB,CAAA;AAyGA,AmBCA;AMmBE,AFaA,AFZA,EIDA,IFaI,GAAG,AFZC,IEYG,AFZC,EIDZ,AFaA,CEbA,AJCe,CEYA,KFZP,GIDR,AJCwB,CIDxB,KJCO,GAA2B,GAAlC,aIDA,GAAA,YAAA;AACE,A5BrBF,AKGA,AqB+BE,AFZH,ExBtBC,AKGA,EqB+BE,GAAG,C1BlCL,C4BqBO,A5BrBP,C0BkCQ,CAAN,CrB/BF,CAAA,KLHA,C4BqBE,A5BrBF,G4BqBoB,AvBlBpB,CAAA,GuBkBE,IvBlBF,CLHA,EKGA,CLHA,UAAa,CKGb,GLHA,EAAiB;A4BsBhB,A5BrBC,AKGA,AqB+BA,AFXJ,GIJE,CFeE,GAAG,I1BlCK,AKGA,AqB+BD,CAAP,I1BlCa,AKGA,OAAL,GLHA,CKGgB,GLHG,GKGG,CAAC,CLHC,GKGR,CAAY,KAAK,CLHd,CAAgB,IAAhB,CAApB,AKGiB,CAAjB,GLH8C,CKGC,EAAtD,MLHA;ASQF,AmBeA,A5BtBC,AKGA,AqB+BA,AC9BG,ElBGJ,CTTA,AKGA,MIMA,AkBHc,ClBGd,SAAA,CAAA,GkBHI,CAAyB,KlBG7B,GAAA,GkBHI,EAAoC,KlBG9B,MAAV,EAAgB;AACd,ATNF,AY6CA,AP1CA,AsBAA,Ef0CA,Ae1CA,OlBGO,GGuCP,CAAA,Ae1CW,CAAC,ElBGV,GACE,EkBJJ,Cf0CA,Ae1CoB,Cf0CpB,GHtCW,MAAP,GkBJJ,ElBIsB,IGsCtB,GAAA,CHtCI,GAA6B,QAAQ,AGsCzC,CHtC0C,cAAT,CAAwB,MAAxB,CAA7B,GAA+D,MADjE;AAED,AGsCC,AflBE,A6BMJ,AbbI,AcjBL,GlBCC,MZuBc,A6BOZ,AbdY,EDyBL,CcXJ,C7BPD,CAAe,C6BQjB,CdUY,CflBV,CgBPA,ChBOoB,AgBPA,IhBOpB,C6BOF,C7BP0B,E6BS1B,KdSA,CCzBE,EAAkC,eagB1B,GAAV,EAAe,CAAf,CAFA,GAGA,SAHA,GAIA,uBAAU,GAAV,EAAe,CAAf,EAAkB,YAAlB,CAJA,GAKA,QALA,IAMC,iBAAiB,IAAI,CAArB,GACG,EADH,GAEG,MAAM,WAAW,CAAC,MAAZ,CAAmB,iBAAiB,GAAG,CAApB,GAAwB,CAAxB,GAA4B,CAA/C,CARV,CADF;AdaC,AflBD,A6BgBD,AbvBC,AchBF,GfuCE,GfhBM,GgBPE,GhBOI,GAAG,GAAG,CAAC,IgBPG,EhBOP,CgBPU,GAAlB,ChBOuB,CAA9B,CgBPgC,IAAI,CAAC,EAArC;AJbF,AGwCE,AfnBA,A6BiBF,AbxBC,MhBOK,GYrBN,EZqBE,KYrBF;AAhHA,AIgIA,CJhIA,CAAsB,eAAtB,CAAA;AZuIE,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,MAApB,EAA4B,CAAC,EAA7B,EAAiC;AAC/B,AyB3BE,IzB2BF,KAAK,AyB3BO,GzB2BJ,GYtBG,AZsBA,CAAC,CAAD,CAAX,CyB3BE,CAAqB,MAArB,EAA6B,CAA7B,EAAgC,CAAhC,EAAiC;AtBDrC,AKGA,AFFF,AmBCE,EtBFA,AKGA,MLHA,CAAA,AsBEO,CnBDC,CAAC,CEET,CAAA,EiBDa,CAAC,CAAD,CtBFb,AsBEO,CtBFP,CGCF,CAAqB,CEEnB,AiBDoB,CjBCpB,AFFF,AmBCS,IAAkB,CAAC,EtBF1B,EsBE8B,CtBF9B,GKGA,EiBDoC,CjBCpC,AiBDqC,CAAD,CAA7B,EtBFK,EsBE+B,MtBF3C,AKGA,AiBDiD,CAAC,CtBF9B,AsBE6B,CAAN,IAAa,CAAjD,IAAsD,CAAC,IAAI,MAAM,CAAC,CAAD,CAAxE;AtBDE,AKGA,AFDJ,AN0BI,AyB1BH,QtBFO,AH4BA,CG5BC,EKGG,CRyBA,CAAC,CG5BC,EKGG,ERyBL,EAAQ,CAAR,EQzBA,ARyBW,CG5BnB,EAAsB,AH4Bd,CQzBgB,ARyBxB,EAAyB,eQzBM,EAAP,EAAW,KAAK,OAAhB,CAAjB,IAA8C,EAArD;AuBmBF,A5BrBI,AKGH,ARyBG,AyBzBN,EMkBE,CvBpBA,ULDW,AH4BA,E+BPX,CAAA,E5BrBI,AH4BA,O+BPJ,CAAA,mBAAA,GAAA,YAAA;AACE,A5BrBC,AY8CH,AP1CA,ARwBG,A2BNC,EZwBJ,OYxBc,EIAV,ChBwBJ,CAAA,GgBxBS,AJAL,CAAkB,EIAlB,CAAS,EhBwBb,CAAA,EYxBI,EAA4B,IZwBhC,GAAA,GgBxBI,CADF,AJCE,EAAuC,MZwB3C;AgBtBC,AhBuBC,AflBD,A2BND,GIHA,GJGM,KZwBG,EYxBI,GZwBC,AYxBE,OZwBd,IYxByB,IAAI,EAA/B;AIGA,A5BzBE,AY+CD,ACzBG,AWCJ,GZsBA,GYtBM,GXDQ,EbtBL,CwBuBG,GAAG,GXDX,CbtBa,AasBO,GbrBlB,AwBsBgB,CAAC,MAAR,CxBtBD,GaqBV,AWC6B,CxBtBf,CaqBoB,IbrBf,QwBsBvB,ExBvBiB,GAEX,MAAM,CAAC,IAAP,CAAY,KAAK,UAAjB,EAA6B,MAA7B,GAAsC,CAF1C;AAGD,AY8CD,AfpBA,AgBNA,AcjBI,AHkBJ,GxB5BA,GwB4BM,G3BKC,AgBNC,AcjBM,GAAV,C9BuBJ,A8BvBkB,GHkBF,GAAG,IXDG,GAAG,AWCC,CGlBtB,AHkBuB,EGlBK,CdiBH,CAAC,EAAvB,GAA6B,CWCjB,EXDnB,EWCyC,WAAzC;AxBnBA,AHyBD,AgBNA,AcjBC,AHkBA,MAAM,GGlBC,CHkBG,GAAG,GGlBC,KHkBO,CAAC,OAAT,CGlBN,CHkBP,IGlBiC,QAA1B,GACH,sBAA+B,cAA/B,CADG;AtBDP,AR0BF,AgBNA,AcjBM,EtBHJ,UAAA,CAAA,SAAA,CAAA,aAAA,GAAA,YAAA;AACE,AsBE6B,AHiB/B,EGjB+B,IHiB3B,IAAI,CnBnBC,CAAC,CAAC,EmBmBE,CGjBiB,EtBFd,EsBEkC,IAFlD,CtBAE,YmBmBwB,mBAA1B,EAA+C;AnBlB9C,AsBEF,AHiBG,GnBrBF,CmBqBE,QAAQ,GAAG,QAAQ,CAAC,KAAT,GAAiB,SAAjB,CAA2B,UAA3B,EAAuC,WAAvC,CAAX;AnBjBF,AiBFI,AKIN,AHgBG,SFpBa,sBAAV,CAAiC,MAAjC,EAAyC,UAAzC,EAAmD;AnBCzD,AmBAE,MAAM,InBAE,AmBAE,CnBAD,EmBAI,MAAM,CnBArB,AmBAsB,CnBAD,AmBAA,CAAnB,GnBAF;AHAE,AY6CA,AT3CF,AmBDE,AEmBA,ExBpBA,AY6CA,IU5CM,AEmBF,ExBpBJ,CAAA,CsBCU,AEmBF,EZyBR,CAAA,AU5Ca,AEmBF,CAAX,IxBpBA,CAAA,AsBCmB,CAAC,CAAD,CV4CnB,AU5CA,CV4CA,SAAA,GAAA,GZ7CA,GAAA,IY6CU,MZ7CU,AY6CpB,EAAgB,EZ7ChB,EAA0B,QAA1B,EAAkC;A4BuBlC,A5BtBE,AY6CA,AU5CF,AEmBA,EIEA,INrBM,AEmBF,ExBpBI,CY6CD,CU5CG,GAAG,EMqBb,CAAA,AhBuBE,CZ7Ce,AwBoBjB,EZyBiB,AU5CE,AEmBF,CxBpBG,AsBCA,CAAD,CAAnB,GMqBA,A5BtByB,AY6CvB,AYzBF,CIEA,CJFyB,CAAzB,EAA4B,EAA5B,EAAgC,CxBpBZ,AwBoBpB,EAAmC,EIEnC,A5BtBuC,AwBoBvC,GIEA,E5BtB4C,U4BsB5C,A5BtBuC,CAAgB,IAAhB,CAArC;A4BuBA,AhBuBA,AfnBE,AyBzBJ,MAAM,GV4CC,AfnBO,CyBzBJ,CMsBN,ENtBS,EzByBT,C+BHK,A/BGY,EemBnB,CgBtBE,ANtBe,CMsBN,A/BGT,AyBzBgB,CV4CD,AU5CA,CV4CC,AfnBO,AyBzB3B,EV4CsB,EfnBlB,EAA2B,E+BH3B,AhBsBwB,CgBvB1B,GhBuB8B,KAAK,OAAjB,CAAlB;AgBpBD,A5BzBC,AY8CD,AfnBD,AyBzBA,AEkBA,GICA,AhBsBA,GfhBM,AyBzBA,CAAC,CtBFD,EH2BI,AyBzBA,AEkBF,G3BOK,C2BPb,GxBpBE,AH2Be,CAAC,CG3BD,CsBEG,CAAC,CAAD,CAApB,CzByBA;A+BAA,A5B1BI,AY+CJ,AP7CA,AiBAA,ATmBI,AWDF,EnBlBF,IiBAM,CAAC,ETmBO,AWDP,CxBpBG,AsBEA,EjBAV,CAAA,ELFe,AaqBX,CAAiB,CAAjB,CbrBc,CaqBM,CSnBJ,ATmBhB,CSnBiB,CjBArB,AiBAoB,ATmBK,CRnBzB,AiBAA,ItBF2B,CAAC,CKE5B,EmBkBoB,CnBlBpB,GLFkB,CAAkB,AwBoBlC,MnBlBK,ELFW,CAAd,AKEJ,EAAY,QAAZ,EAAoB;AAClB,ARwBF,AyBxBA,ATmBA,AWDE,M3BME,AyBxBA,ATmBE,CAAC,CRnBD,CmBkBC,C3BMC,AgBLE,CAAC,GAAG,ChBKD,AgBLb,ERnBE,CiBAc,CzBwBC,CAAC,CyBxBC,KzBwBnB,EAA0B,G2BNN,WAAlB,CFlB8B,OAAhC;AtBFI,AKGF,ARwBA,AgBLF,AWDE,InBlBA,KQmBK,AWDA,CxBrBC,AasBA,ChBKC,EQxBE,AQmBA,CAAJ,CbtBM,CKGC,ARwBZ,CgBLa,CAAR,EbtBW,CAAC,AasBA,CbtBf,AasBgB,EbtBE,CasBC,CAAhB,ERnBiB,CQmBG,CAA3B,CRnBE,AmBkBkB,WAAlB;AxBpBI,AKGJ,ARwBD,AyBzBD,AToBD,AWDG,MFnBE,CAAC,EjBCE,AmBkBA,CFnBC,EtBFE,EsBEV,EAAc,CtBFC,KKGb,CAAmB,IAAI,ImBkBL,ExBrBV,IAAyB,CKGd,CAAgB,ELHE,IAAI,GKGtB,AmBkBnB,ExBrB8C,AKGA,GAA3B,EAAgC,QAAhC,CAAnB,ELHI,EAA4D;AAC1D,AKGN,AFAJ,AmBDI,ATqBJ,AWFI,InBlBA,AiBDA,KEmBK,CrBlBC,CAAC,EEAE,GAAG,AiBDA,GAAG,CnBCnB,CAAqB,EAArB,QmBD+B,AEmBT,GFnBY,OjBCF,CmBkB5B,anBlBA,CiBD2C,IAA3C;AtBDM,AY8CR,AP3CE,AFCJ,ANsBE,AyBxBC,AEkBgC,EZ0BjC,CU9CA,IzB0BK,EQvBE,AiBDA,CtBFC,CH0BC,CeoBT,AfpBU,CeoBV,AU5CW,CAAC,CzBwBC,CAAb,CyBxBe,CzBwBC,CG1BC,AH0BA,CG1BC,CsBEX,CV4CP,AP3CE,ARuBkB,CeoBpB,AP3CqB,AiBDA,EtBFJ,CAAT,AH0BR,CQvByB,CRuBC,CG1BC,AH0BA,EAA3B,EAA+B,KQvBV,CAAgB,EO2CrC,GZ9CQ,AY8CR,IP3CqB,EAA2B,GAA3B,EAAgC,CO2CrD,OP3CqB,CAAnB;AuBuBF,A5BzBQ,AY8CN,AP3CD,ARuBC,AyBxBA,AEkBE,EIKJ,CvB5BA,CiBKE,IzBwBI,GeoBG,CZ9CC,AH0BA,CAAC,CAAD,C+BDV,A/BCM,C+BDN,AhBqBc,AU5CA,CtBFC,EsBEE,CzBwBC,IAAI,C+BDtB,A/BCuB,C+BDvB,A/BCsB,CAApB,EAAyB,EyBxBE,CV4C3B,CZ9CQ,CAAsB,AsBEA,ItBFtB,CAAF,E4ByBR,GAAA,UAAgB,ENvB6B,GMuB7C,EAAqB,ANvBnB;AMwBA,A5BzBK,AY8CN,AP1CD,ARsBI,AyBxBH,AEkBE,GZwBH,KgBnBQ,C5B7BF,E4B6BK,E/BCA,C+BDG,C5BzBD,GH0BT,C+BDe,MAAL,EAAZ;AACA,A5BzBM,AY+CR,AfrBG,S+BDI,C5BzBC,SAAS,C4ByBf,A5BzBgB,C4ByBC,GAAG,CAAC,C5BzBf,CAAiB,KAAjB,EAAwB,CAAxB,G4ByBW,CAAkB,KAAlB,CAAjB;AACD,A/BCA,AyBzBD,AEkBE,GIGF,GNrBI,CAAC,EEkBE,CFlBC,IAAR,EAAc,eEkBM,OAAlB;AIQF,A5B3BQ,AsBEN,AEiB2B,IFjB3B,UtBFU,EsBEE,GAAG,ItBFI,CAAC,MAAV,CsBEiB,GAAG,CtBFC,CAAzB,EAA4B,kBsBES,KAA3C;AtBDQ,AH0BV,AyBxBC,AEiBG,GFnBJ,KEmBI,C3BOG,AyBxBA,IzBwBP,AyBxBW,CAAC,GAAG,EtBFE,AwBmBF,EFjBR,EAAc,CtBFC,UAAL,CAAgB,IAAhB,CAAP;AACD,AGIL,ANsBL,A6BqBK,AJ7CF,AEgBgB,IFhBhB,KnBEY,AuB2CA,MAAV,CvB3CA,AuB2CiB,AJ7CP,CnBEQ,EmBFL,CnBEb,EAAqB,IuB2CrB,EAA6B,GJ7CJ,GAAG,EI6C5B,EAAuC,kBAAvC,AJ7CyC,EI6CgB,GJ7C3D;AtBDK,AY8CP,AP3CA,AFCA,ANuBF,A6BoBE,AJ7CC,AEgBK,EZ4BN,AP3CA,IFCI,AuB2CA,EF7BE,GrBdG,CS0CT,AP3CA,AFCU,CS0CV,AP3CA,GqB4CA,AF9BqE,CAE/D,CE4BU,CvB3CZ,CAAc,ES0ClB,AP3CA,CO2CA,AP3CA,AFCI,CAAJ,EAAwB,KqBa6C,EAAjE,OnBdJ,CO2CA,EP3CA,CO2CA,SP3CkB,CO2CC,EP3CnB,EAAuB,IO2CvB,EAA2B,EP3C3B,EAA+B;ALF1B,AY8CH,AP3CA,AFCA,AuB2CA,AbzBE,AWHA,QAAA,CZ2BG,AP3CA,AFCA,AUkBO,EayBL,CF5BD,CrBfG,AUkBP,CVlBQ,AUkBO,CAAf,AWHO,ErBfI,AUkBO,CVlBf,AUkBH,CayBa,AF5BF,CrBfG,AuB4Cb,Ab1BoB,AWHT,CXGZ,CVlBgB,CUkBM,AWHf,CAAS,CZ2BlB,AP3CA,AFCqB,CEDC,CqB4Cf,CdDiB,AT1CA,AuB4Cb,CvB5Cc,IuB2ClB,EvB3CP,AuB4CkB,CdFlB,CT1CiC,CEDD,AFCE,CqBeD,CAAC,CnBhBlC,AFCqC,EEDE,AFCvC,EAAyC,AuB4Cb,CAAC,CvB5Cc,AuB4Cf,CvB5C5B,AuB4CkB,CAAc,CvB5Cc,CED9C,AmBgB6C,CAAC,CAAD,CAAZ,EE6Bf,AF7BgC,CE6BV,KF7BP,CAAxB,CAAP,WE6BgB,CADX,EAEJ,OAFI,CAEI,KAFJ,EAEW,UAAU,CAAC,CAAD,CAAV,CAAc,OAAd,CAAsB,kBAAtB,CAFX,CAAP;A1B9CC,AY8CF,AP3CA,AFCG,AuB6CH,AJhDD,ATqBA,GDsBA,AP3CA,AqB4CA,GJ5CI,GIgDG,Ab3BA,CAAC,GAAG,CAAC,ISrBI,ATqBA,CAAC,GAAG,CSrBC,ATqBT,CAAZ,SVlBkB,GAAG,CAAC,CAAD,CAAjB,MmBH8B,OAAlC,EAA2C;AMyB3C,A5BzBC,AY+CD,AP3CA,AFAG,AuB6CD,AJhDA,ATqBH,AchBK,AHYA,EIOJ,C5B1CA,CsBkBE,KKKY,ED2CL,EAAP,AF/BO,CAAC,CIOV,CAAA,ANxBc,CEiBD,CAAJ,CFjBQ,CEiBD,EAAE,GIOlB,AJPqB,CIOrB,CDnBI,CAA6B,QHYD,CAAC,CGZ7B,ECmBJ,ADnB6C,CLLf,EMwB9B,AJPI,EAAqC,CAAC,GAAG,CGZzC,CHYA,CGZqD,CCmB1C,ANxBb,AEiB+C,EAAE,CAA/C,CGZA,CCmBJ,AJPsD,CGZU,CCmB5C,QDnBhB,EAAqE;ACoBvE,AzBrBD,AuB6CA,AJhDA,AKKD,AHYM,EGZN,CxBNA,MyByBO,AzBrBA,CqBcD,EGZI,EHYA,CGZG,GAAG,AHYF,CGZG,CCmBf,CAAiB,CJPD,CAAC,EIOjB,CJPY,CAAS,EGZP,CAAhB,YHYsC,CAAC,WAAW,CAAC,CAAD,CAAZ,EAAiB,MAAjB,CAAxB,CAAR;AIQL,A5B1BH,AGKI,AuB6CH,AC3CC,AHYK,GIKL,GDjBI,G3BPN,MAAA,M2BOE,UxBFgE,GAA9D;AyBuBF,A5BzLF,AGmKG,AuB8CH,AJlDE,AKMA,C3BrKF,CAAqB,I2BqKb,GLNC,GKMK,GAAG,M3BrKjB,AsB+JE,CtB/JF,G2BqK2B,CAAC,sBAAX,EAAf;AxBDD,AmBJA,AEiBK;AFfN,AKIE,AHYG,MGZC,MAAJ,EAAY,C3BPC;AKKb,ARuBI,A8BpBF,EtBHF,EsBGE,K9BoBY,GQvBd,CAAA,EFEa,INqBT,A8BpBa,C9BoBQ,EQvBzB,AsBGoB,CtBHpB,ARuBI,EAA0B,G8BpBJ,CAAC,M9BoBvB,EAAoC,E8BpBd,EAAa,EtBHvC,GAAA,AsBG0B,CAAxB,StBHmB,GAArB,EAA0B,QAA1B,EAAkC;AO4ClC,AP3CE,ARuBF,A2BTE,EZ6BF,IfpBM,GQvBC,AmBcA,GZ6BP,AfpBY,CeoBZ,EfpBe,GAAG,CAAC,GeoBnB,CAAA,EfpBA,GQvBE,CAAyB,EmBcP,CZ6BpB,GAAA,MP3CqC,GAAnC,AmBcA,CZ6BQ,CP3CkC,KO2C5C,EAAgB,CP3Cd;AO4CA,AP3CD,ARuBD,A8BrBE,AHWiC,GnBfnC,GRyBM,E8BrBA,CfyCC,AfpBE,GAAG,IeoBV,CfpBe,A8BrBF,C9BqBG,CeoBD,EfpBI,A8BrBF,C9BqBG,GeoBpB,GfpBe,CAAjB,C8BrB4B,KAAK,UAAU,CAAC,QAAX,EAA/B,EAAsD;Af0CtD,AP1CF,ARsBA,A8BrBI,AHWA,M3BUA,CAAJ,C2BVI,CZ8BG,CezCG,QfyCR,CY9Ba,EZ8BI,CAAC,CezCG,CfyCD,EezCI,GfyCC,OAAL,AezCc,CAAC,GfyCC,MAAlB,CAAlB,MezCwB,EAAtB;Af0CH,AcGG,AFlCc,GZ4BlB,McMc,MAAV,CAAiB,WAAjB,EAA8B,WAA9B,EAAyC;AdD7C,AftBA,A6BwBA,AC7CI,AHWE,MEkCF,C7BxBC,CAAC,A2BVA,EGXE,C9BqBC,CAAT,A6BwBU,E7BxBE,CAAC,A6BwBA,CFnC+D,CAEtE,C3BSU,C6BwBhB,IC7CI,C9BqBJ,C8BrBuB,C9BqBC,CAAC,EAAzB,EAA6B,A2BX+C,EAAxE;AIYJ,A/BAE,AyBzBE,AKIE,ECqBN,E/BAE,GAAG,CAAC,A8BrBA,C9BqBD,AyBzBS,CzByBZ,GAAS,E+BAX,CAAA,INzBI,GAAqB,AKIJ,ECqBrB,CAAA,ADpBS,MCoBT,GAAA,MDpBwB,GAAG,CCoBpB,GAAP,EAAU,ODpBF,GAAoC,uBAAgB,SAAhB,CADtC;ACsBJ,A/BDU,A6BwBZ,AJhDA,AKKK,AHUD,IIUF,E/BDU,C6BwBP,EJhDE,CMyBL,ANzBM,CMyBN,A/BDe,A6BwBR,CAAC,C7BxBS,A2BTV,C3BSE,A2BTD,CEiCG,EFjCA,CFfN,AEeE,EIUP,ANzBgB,AEeF,CIUR,CJVU,GAAG,CEiCG,CEvBtB,AFuBuB,CEvBX,ANzBP,EAAqB,CAAC,CMyB3B,CAAY,AFuBD,GAAqB,AFjCF,CIU9B,AFuBF,AFjCiC,EIUlB,AFuBsB,AJhD9B,CIgD+B,CJhDC,CMyBrC,ANzBsC,CEepC,CEiCsC,CAA1C,AFjCyC,CAAC,CEiCG,EAAE,AFjCF,CEiC7C,AJhDO,CAAP,AEeI,CEiC8C,CFjCD,EAAE,CAA/C,EAAkD;A3BShC,A6ByBpB,AJhDH,AKKI,AHUG,M3BQgB,E6ByBhB,EFjCA,C3BQqB,EAAE,GAAG,A2BRpB,C3BQqB,CAAD,C6ByBf,AFjCF,CEiCG,CAAD,CAAX,IAAkB,IFjCE,CAAC,CAAD,CAApB,IEiC6B,CAAC,CAAD,CAAjC,EAAsC;AEvBtC,A/BFS,A6B0BP,AJ/CN,AKIG,AHUK,GGnBN,E9B0BE,C6B0BE,EExBE,CDnBC,CHUD,CISJ,CFwBQ,CExBC,CJTD,CEiCG,GFjCC,EEiCV,EFjCc,CAAC,GAAL,CAAS,eAAe,CAAC,MAAM,CAAC,CAAD,CAAP,EAAY,MAAZ,CAAxB,CAAR;AIUF,A/BFH,A6B0BG,AC3CF,QAAM,ECmBE,GDnBG,GAAG,ECmBE,GAAG,GAAG,CAAC,CDnBC,CAAC,QAAX,CCmBK,CDnBnB,CCmBE;AACA,AFwBD,AFlCG,WIUG,IJVE,CAAC,GAAG,CAAJ,EAAO,CIUd,CAAkB,AJVF,GAAG,CIUnB,CACE,IJXuB,CAAC,MAAxB,EAAgC,CAAC,GAAG,EAApC,CIWO,CJXiC,EAAE,CAA1C,EAA6C,EIW7C,EAAiB,mBAAU,WAA3B,EAAwC,KAAK,eAA7C,EAA8D,IAA9D,CADF;AvBrBJ,ARmBA,A6B2BC,AC5CC,AHUM,EnBZR,ARmBA,GAAG,CAAC,E8BjBG,E9BiBP,CAAS,CQnBT,AmBYQ,CnBZR,AsBEY,GHUA,CGVI,GHUA,C3BOG,CQnBnB,ARmBS,CQnBT,CRmBsB,A2BPF,C3BOX,A2BPY,CnBZrB,CRmBuB,C2BPP,CnBZhB,AmBYyB,GGVH,OtBFlB,AsBEG,GtBFP,CsBEiC,CtBFxB,AsBEyB,AHUM,CAAC,InBZzC,EAAgB,AmBY+B,CAAC,CGV1C,AHUyC,CAAP,EAAY,CGVJ,ItBFhD,CmBYwC,CnBZd,AmBYV,CAAR,EGViD,IAAI,eAAM,OAAjE,EAA0E;ACsBxE,AhBoBJ,AP3CE,ARmBA,A8BjBE,AHUG,EZ+BP,IezCI,EtBFI,EuBuBA,C/BJC,CewBT,CAAA,CP3Cc,CuBuBD,EvBvBI,IRmBE,A8BjBA,CfyCnB,AP3CsB,ARmBF,CewBpB,AfxBqB,CAAC,A8BjBA,KtBFL,ARmBE,EAAU,C+BIzB,A/BJ0B,CAAC,C+BIC,AvBvBE,AsBE9B,GfyCJ,CfxBmB,CQnBoB,ARmB9B,CewBT,GfxByC,CAAC,CAAC,CQnBT,GAAe,CO2ClC,AfxB0B,CQnBxB,CAAf,CRmBiD,CAAC,CAAC,KAAnD,CewBF,EAA0B;AgBnBpB,AhBoBJ,AfxBD,A6B0BD,AC3CG,AHUE,G3BKL,E8BjBE,If2CK,AcEA,EC3CE,ECqBE,EFsBX,MdFE,GAAoB,CgBpBhB,CAAkB,IAAlB,CACE,IhBmBN,gBgBnBa,QAAP,EAAiB,mBAAU,UAA3B,EAAuC,KAAK,cAA5C,EAA4D,IAA5D,CADF;AAGD,AhBkBJ,AP5CC,AqB8CH,AC3CK,GfuCJ,KP1CM,UAAJ,EAAgB;AO8ClB,AP7CI,ARmBJ,A6B4BF,AC5CM,AHSA,MnBZA,CRmBC,CAAC,GAAG,CQnBC,ARmBV,CQnBW,CRmBC,CAAC,CQnBH,CAAN,CRmBY,EQnBE,CRmBC,CAAC,GQnBhB,GRmBJ,EAA4B,CAAC,EAA7B,EAAiC;A+BO7B,AvBzBD,ARmBD,A8BhBE,AHSD,I3BOD,CQrBA,ERqBG,CAAC,CAAD,CAAH,C+BMO,AvBzBA,ERmBE,GAAG,CAAC,CAAD,CAAH,CAAO,E+BMd,CAAiB,E/BNnB,E+BME;AACD,AvBzBC,ARmBH,A8BhBG,UtBHM,AsBGA,QtBHQ,GAAG,CsBGD,GAAG,EtBHI,CAAC,GAAD,CAAvB,oBsBG8C,CAC5C,UAD4C,EAE5C,GAAG,CAAC,WAAD,CAFyC,CAA9C;ACuBH,AvBzBG,ARmBL,A2BRG,GIAF,GvBXI,GmBWG,GnBXG,CAAC,GAAD,CAAN,GAAc,KAAd,MmBWgB,mBAAlB;AIgBF,A/BNF,AyBtBM,AKOA,AHKqC,SFZ3B,CKON,YAAU,CLPd,CAAyB,GKON,CLPnB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,EKOvC,ELPJ,EAAiD,AKOT,KAAK,KLP7C,AKOkD,ELPS,aKOH,OAAxD,EAAiE;AtBLjE,AiBDJ,AKOM,AHKF,MFZA,IjBCI,EmBWE,IFZV,EjBCgB,AiBDA,IEYI,CnBXC,KAAjB,EAAwB;AACtB,AiBDJ,AKOI,AHKA,IFZJ,IKOI,KtBNK,CiBDC,CAAC,CAAD,CAAV,EjBCI,CAAY,AiBDA,GjBCZ,AsBMe,CLPnB,CjBCqB,CsBMC,OtBNlB,GsBM4B,GAAG,UAAU,CAAC,gBAAX,EAA/B;AtBLD,AiBDH,AKOG,AHKG,IFZN,GKIE,CHQI,KGLG,CLPC,CAAC,CAAD,AEWwD,CFXlE,AEaM,GFbU,IAAhB,MEWkE,EADhE;AZoCJ,AP5CG,AiBDD,AKOI,EfsCN,EU7CE,QV6CF,AetCU,CfsCV,CU7CY,CAAC,CAAD,CAAV,GAAgB,AKOA,EfsClB,CAAA,AetCqB,CLPnB,AKQM,KAAK,CAAC,CAAD,CAAL,GAAW,SfqCnB,CerC6B,EfqC7B,CerCgC,CADX,EAEb,KAAK,CfoCS,AepCR,CAAD,CAFQ,EfsCrB,AenCQ,EfmCkB,GenCb,CAAC,CAAD,CAAL,GAAW,UAAU,GAAG,CAHX,EAIb,KAAK,CAAC,CAAD,CAJQ,EAKb,KAAK,CAAC,CAAD,CALQ,EAMb,KAAK,CAAC,CAAD,CAAL,GAAW,UAAU,GAAG,CANX,EAOb,KAAK,CAAC,CAAD,CAPQ,EAQb,KAAK,CAAC,CAAD,CAAL,GAAW,UAAU,GAAG,CARX,CAAf;AfuCJ,AP5CD,AiBDC,AKgBI,AHJF,GnBtBJ,CiBUE,IKgBI,Cf6BC,IYjCE,CFZG,AEYF,CFZG,CAAD,AKgBE,CLhBZ,AEYW,CAAJ,CGIQ,CLhBC,AEYF,EAAE,EFZhB,CEYmB,MGIM,Cf6BzB,Ae7B0B,Gf6BK,AYjCF,CAAC,GZiC9B,Ce7ByB,EAAW,AHJlC,EAAoC,CAAC,GAAG,EGIjB,AHJvB,EGI4C,AHJA,CGIrB,CAArB,AHJ4C,CAA9C,EAAiD;AZkCpD,AP3CD,AiBFE,AKgBI,AHJA,GZ+BN,OY/BM,CFZG,CKgBG,EHJF,GGIO,CHJH,EGIM,CLhBlB,IEYmB,CAAC,UAAU,CAAC,CAAD,CAAX,EAAgB,IGIL,OHJX,CGImB,AHJlC,CGImC,KAAT,CAAe,CAAf,EAAkB,CAAlB,CAAZ,EAAkC,QAAQ,CAAC,KAAT,CAAe,CAAf,EAAkB,CAAlB,CAAlC,CAAd;Af+BN,Af1BI,AyBpBH,AKgBK,AHJD,GFlBL,MzB0Bc,AyBpBP,GKgBK,M9BIR,A8BJc,C9BIM,E8BJH,C9BIjB,EAAyB,IAAzB,EAA6B,gB8BJA,QAAQ,CAAC,KAAT,CAAe,CAAf,EAAkB,CAAlB,CAAZ,EAAkC,QAAQ,CAAC,KAAT,CAAe,CAAf,EAAkB,CAAlB,CAAlC,CAAf;A9BKN,AyBpBE,AKgBI,M9BIF,E8BJE,G9BIN,AyBpBS,CAAC,IAAD,EAAO,IAAP,CKgBY,CLhBC,EKgBE,CAAC,CLhBhB,EAAmB,EKgBE,ELhBrB,CAAP,AKgB+B,MAAT,IAAmB,CAArC;ACWN,A/BNA,AyBpBC,AKgBI,AHLD,EIeJ,I/BNM,KAAK,GAAG,C+BMd,A/BNe,C+BMf,E/BNkB,CAAC,KAAJ,C+BMf,A/BNyB,C+BMzB,S/BNmC,EAAV,EAAc,GAAd,EAAiB,C+BM1C,GAAA,UAAoB,MAApB,EAA0B;AACxB,A/BNA,AyBpBH,AEWI,I3BSD,K+BMK,A/BNA,G+BML,A/BNQ,C+BMC,E/BNT,e+BMA,EAA4B,MAA5B;AACD,A/BNC,AyBnBJ,AKcM,GCSJ,ODTU,C9BKD,CAAC,IAAI,CAAC,EAAD,EAAK,E8BLI,C9BKT,EAAU,A8BLE,G9BKZ,CAAZ,K8BLiC,GAC3B,uBAAgB,SAAhB,CAD2B,GAE3B,UAAU,CAAC,gBAAX,EAFJ;ACaJ,A/BPC,A2BVC,G3BOa,CAAf;AAIA,A8BJI,AHPO,S3BWJ,C8BJC,I9BII,GAAG,KAAH,C8BJS,E9BIE,CAAC,CAAxB,C8BJ0B,SAAtB,EAAiC;Af6BrC,AfxBD,A8BJO,AHPF,EZmCJ,Me5BM,If4BN,CAAA,CYnCU,IAAI,IZmCd,CAAA,Ae5BqB,AHPX,CAAU,GGOK,aAAnB,Kf4BN,GAAA,QYnCoD,IZmCpD,AYnCU,CAAN;AZoCF,AP5CF,ARqBF,A8BLO,AHPF,EnBTH,SO4CS,CP5CT,CAAA,GO4Cc,MP5Cd,CAAA,aAAA,GO4CE,AP5CF,UAAc,MAAd,EAAsB,UAAtB,EAAgC;AO6C/B,AP5CC,AqB+CE,AC/BD,AHnDH,GZ6EA,MP1CO,AqB+CO,IrB/CD,EqB+CT,CrB/CF,AqB+CmB,IrB/CD,MAAlB,AqB+CE,ErB/CwB,AqB+CK,KAA7B,EAAkC;ArB9ClC,AqB+CJ,AC/BC,MD+BK,KrB/CG,GAAL,AqB+CU,CrB/CD,EqB+CI,CrB/Cb,EAAc,CqB+CG,CAAC,GAAL,CrB/CO,AqB+CE,CrB/CD,GAAD,CAApB,AqB+Ca,CAAjB,CrB/C+B,UAA3B;AO4CN,AP3CK,AqB+CH,AJhDI,AESJ,MEuCM,GdJR,AU5CgB,AESP,IAAP,CEuCc,GAAG,EdJnB,EcIuB,CAAC,GAAL,CAAS,EJhDtB,CAA8B,EIgDjB,CAAjB,OJhDI,EAAwC;AV7K9C,AP+KG,AqB+CD,AJhDA,AKgBA,AHPD,CZvLD,EAAA,AP2KE,GqBmDM,CAAC,EJhDA,AKgBA,CDgCG,UAAU,CAAC,CAAD,CAAV,AJhDW,CAAC,AKgBtB,EDgC0B,MJhDL,EIgDX,AJhDsB,GIgDK,KJhDhB,EAAqB,CAAC,EIgDI,CAAC,CAAD,CAAV,GAAgB,AJhDhC,EAAgC,CAAC,KIgDtD,GJhDqB,EAA2C,UAA3C,CAArB;AjBGA,AqB8CA,AJhDD,AKgBA,AHND,MEsCQ,CAAC,GAAG,UAAU,CAAC,CAAD,CAAV,GAAgB,QAAhB,GAA2B,UAAU,CAAC,CAAD,CAAV,GAAgB,QAArD;AErBA,AFsBA,AJ/CF,AKgBA,ECSE,AFsBA,UAAU,CAAC,CAAD,CEtBV,AhBiBa,AcKb,CEtBA,EFsBgB,CAAhB,MEtBA,CAAA,aAAA,GAAA,UAAc,UAAd,EAAwB;AACtB,AFsBF,EAAA,OEtBO,GAAL,AFsBQ,CEtBC,AFsBA,CAAD,CAAV,GAAgB,CAAhB,IEtBE,EAAqB,eAAc,UAAd,CAArB;AACD,A/BNG,A6B4BJ,GExBA,M/BJc,A6B4BP,Q7B5BH,CAAmB,C6B4BvB,E7B5BI,EAAwB,QAAxB,EAAkC,UAAlC,EAA4C;A+BQhD,A/BPA,A6B4BD,M7B5BO,OAAO,GAAG,QAAQ,IAAI,yBAA5B;AACA,A6B6BF,S7B7BS,GAAG,CAAC,KAAJ,CAAU,UAAU,UAAV,EAAsB,KAAtB,EAA2B;AAC1C,QAAI,KAAK,KAAK,CAAd,EAAiB;AQnBnB,ARoBI,EQpBJ,UAAA,CAAA,ARoBW,IAAP,KQpBJ,CAAA,eAAA,GAAA,UAAgB,MAAhB,EAAsB;AACpB,ARoBC,AyBrBC,QjBCE,CAAC,AiBDO,MjBCD,CAAC,OAAZ,EAAqB,YiBDnB,CAAuC,UAAvC,EAAmD,UAAnD,EAA6D;AjBE7D,AiBDJ,MAAM,CAAC,GAAG,UAAU,CAAC,CAAD,CAApB;AM2BA,AvBzBG,ARmBD,AyBpBF,AKgBI,ECUJ,IN1BM,CAAC,CzBoBC,C8BJM,CLhBJ,CzBoBC,GAAG,C+BMd,CAAA,IN1BoB,CzBoBC,AyBpBA,CzBoBC,AyBpBF,CAApB,EM0BA,A/BNyB,C+BMzB,A/BN0B,KAAK,E8BJ3B,C9BI8B,A8BJK,C9BId,CAAJ,C+BMrB,C/BNsC,E+BMtC,KDVI,EAA8C,C9BI7B,CAAnB,C+BMU,KAAZ,EAAiB;AACf,A/BNA,AyBpBF,AKgBA,EAAA,MCUM,CN1BC,EzBoBE,C+BMC,C/BNC,E+BME,C/BNC,A8BJA,CAAC,E9BIE,C+BMC,A/BNP,GyBpBU,CzBoBE,AyBpBD,CAAD,EAAI,CAAJ,AKgBP,CAAd,CLhB4B,CAAP,CM0BnB,CN1B6B,CzBoBE,AyBpBZ,EAAa,EzBoBG,GAAG,KAAK,AyBpBxB,CzBoBZ,AyBpBT,CzBoBE;AQnBA,ARoBD,AyBpBF,AKgBC,EAAA,C9BFO,CAAP,S8BEW,CAAC,OtBhBH,AsBgBT,CAAoB,ItBhBN,MsBgBgB,CtBhBrB,KAAiB,AsBgBN,EAAgB,GtBhBL,OAAL,GAAe,EAAhC,CAAP,EAA4C,MAAM,CAAC,OAAnD;AuB0BA,AvBzBD,ARoBF,AyBnBD,AKeI,AHPE,GnBdJ,CsBqBE,ICSI,CJhBQ,IIgBH,EDTE,AHPT,CGOU,AHPO,CIgBN,CJhBX,EAAqB,EIgBL,CDTlB,CAAoB,IHPlB,EAA+B,IGOH,ECS9B,CJhBE,CIgBgC,CJhBQ,MGOtB,EAAqB,EHPvC,EAAkD;AIiBlD,AvBxBJ,AsBeI,AHPJ,MAAM,IIgBE,ADTA,CCSC,CJhBG,GAAG,CIgBD,ADTA,KAAK,IHPM,CIgBrB,EAAsB,CJhBG,GGOzB,EAA4B,SHPhC;AIiBM,ADTA,AHPN,MAAM,IAAI,EIgBE,CJhBC,SIgBS,GAAG,IDTF,CCSO,IJhBP,CGOjB,CHPmB,CGOM,AHPL,CAAD,CAAZ,CAAb,GIgByB,EAAnB,GDTA,EAAsC,cAAtC;AACD,AHPL,MAAM,IAAI,GAAG,qBAAU,EAAE,CAAC,CAAD,CAAZ,CAAb;AIgBM,ADRH,AHPH,KGGE,CHHI,IAAI,EIeA,CJfG,QAAQ,CIef,EAAgB,AJfE,MAAxB;AIgBQ,ADRP,AHPD,GGCA,GHDM,GAAG,GAAG,GIeC,CJfG,CAAC,IAAL,CACV,GIcM,CJdF,CAAC,CIcmB,EJdxB,CAAS,IAAT,IAAiB,IAAI,CAAC,GAAL,CAAS,IAAT,CAAjB,GACE,IAAI,CAAC,GAAL,CAAS,EIcH,EJdN,GIcW,CJdM,IAAI,CAAC,GAAL,CAAS,IIaJ,AJbL,CAAjB,CIeM,EJf4B,IAAI,CAAC,GIajB,AJbY,CIa9B,AJbuC,OAAT,CAF1B,CAAZ;AImBO,ADXR,AHJC,MAAM,GIUA,AJVG,GACP,GIcW,CJdP,GACJ,IAAI,CAAC,KAAL,CACE,IAAI,CAAC,GAAL,CAAS,OAAT,IAAoB,IAAI,CAAC,GAAL,CAAS,IAAT,CAApB,GAAqC,IAAI,CAAC,GAAL,CAAS,IAAT,CADvC,EAEE,IAAI,CAAC,GAAL,CAAS,IAAT,IAAiB,IAAI,CAAC,GAAL,CAAS,IAAT,IAAiB,IAAI,CAAC,GAAL,CAAS,GAAT,CAFpC,CAFF;AIgBQ,AN5BJ,AKkBN,AHAE,SFlBc,AEkBP,CAAC,KIUK,UAAL,GAAkB,GJVR,GAAV,CAAD,EAAiB,CFlBpB,CAAwC,WAAxC,CM4BI,CN5BiD,MEkBvB,GAAV,CFlBpB,AEkBG,CAAP,CFlBmE;AM6B5D,AN5BP,AEkBD,MFlBO,MAAM,GAAG,mBAAmB,CAAC,UAAD,CAAlC;AM6BK,AvB5BL,AiBAA,EjBAA,OiBAO,GjBAP,CAAA,SAAA,CAAA,GiBAwB,CAAC,CjBAzB,GAAA,EiBAwB,EAAS,MjBA3B,GAAN,EAAW,AiBAa,CAAxB,SjBAA,EAAqB;AACnB,AiBAH,QjBAO,KAAK,OAAL,IAAgB,GAAG,IAAI,KAAK,OAAhC,EAAyC;AuB4BvC,AvB3BA,AqBiDA,AJhDN,SIgDgB,CEtBJ,AvB3BA,GuB2BG,CFsBT,CAAgB,CEtBJ,EvB3BE,GuB2BG,AvB3BA,IqBiDjB,CrBjDsB,CuB2BV,AFsBgB,EEtB5B,GFsBA,CrBjDiB,CAAa,AqBiDG,GrBjDhB,CAAjB;AuB4BA,AvB3BA,AqBiDJ,EAAA,QEtBU,EFsBA,CrBjDC,AqBiDA,CAAD,CAAV,GrBjDgB,CqBiDC,CEtBG,GAAG,CFsBvB,CrBjDW,CuB2Be,AvB3BF,CuB2BG,EvB3BhB,CAAP,2BuB2BmB,CAAmC,KAAnC,CAAnB;AFuBJ,EAAA,UAAU,CAAC,CAAD,CAAV,IAAiB,KAAjB;AEtBI,AvB3BA,AqBkDJ,SAAO,CEvBC,AvB3BA,SqBkDR,CEvBI,EAAgB,MvB3BJ,KAAK,OAAb,CAAJ,EAA2B;AuB4BzB,AvB3BA,AqBkDP,YEvBa,CvB3BD,OAAL,GAAe,GuB2BK,CvB3BpB,EuB2BuB,8BAAvB;AvB1BD,AqBmDP;AExBQ,YAAI,cAAJ,EAAoB;AAClB,AvB3BJ,UAAI,CAAC,IuB2BI,MvB3BT,EAAiB,EuB2Bb,GAAkB,uCAChB,KAAK,cADW,EAEhB,cAFgB,CAAlB;AAID,AvB9BD,aAAK,MAAL,CAAY,GAAZ,EAAiB,QAAjB;AACD;AuB8BC,AvB7BH,AiBCC,SAAU,IM4BH,UAAL,CAAgB,UAAhB,EAA4B,MN5B9B,CACJ,GM2BM,YN5BF,EAEJ,MAFI,EAGJ,GAHI,EAIJ,MAJI,EAKJ,UALI,EAKM;AMwBJ,AvB7BL,AiBOD,AKWI,GtB7BJ,GiBkBM,GKWQ,GCWF,ANtBA,GAAG,aMsBa,GAAG,CDX3B,CACJ,CLZkC,CAAC,CMsBC,SNtBF,AKW9B,CLXJ,CKaA,QCS+B,EAAzB,EDXF,EAGJ,gBAHI,EAIJ,gBAJI,EAIY;AD6BZ,AJ3CJ,AKgBA,EAAA,OD2Bc,AJ3CP,KKgBK,CAAC,OAAb,CAAqB,CD2BjB,CAA0B,KJ3CF,CI2CxB,AJ3CyB,EI2CS,AC3BP,ILhBH,EI2CxB,AJ3CiC,EI2CO,GC3BvB,EAAqB,QLhBd,EAA0B,MAA1B,EAAkC,GAAlC,EAAuC,MAAvC,CAA5B;AMsBM,AvB7BR,AqBmDE,AJ3CD,AKgBG,IAAA,ED2BI,EAAE,CrBnDV,EqBmDa,CEtBD,IDLI,CD2BG,AC3BF,CD2BG,CrBnDpB,AqBmDmB,CAAN,GAAY,CC3BrB,CAAqB,GCKjB,CFsBuB,CEtBD,AFsBE,CAAD,CAA7B,GC3BiC,WAAV,EAAqB;ACMpC,AvBvMV,AqB6NE,AJ1CF,AKeM,CtBlMN,CAAyB,IqB6NjB,EAAE,EEtBA,CFsBG,GEtBC,GAAG,AFsBE,CAAC,CAAD,CAAN,CrB7Nb,CAAA,CqB6NyB,IC3BF,ED2BQ,CAAC,CAAD,CAA7B,CEtB+B,CAAC,IDL5B,EAA8B,ICKH,CAAvB,MDLJ,EAA2C,gBAA3C;ACMG,AFsBP,AC3BI,SCGE,AFwBC,EAAE,GAAG,CEtBC,CFsBN,GAAU,EAAE,GAAG,EAAtB,CC3BqB,WAAjB,EAA8B,WAA9B,EAA2C,gBAA3C;ACMI,AFsBT,AC3BI,KAHD,KCQM,IAAI,CvB9BC,EuB8BE,UAAU,CAAC,QAAX,EAAP;AACD,AFuBT,AC5BG,GALD;ACWK,ADLN;ACMI,ADJL;;ACKI,ANrBE,QMqBE,CAAC,ANrBO,KMqBF,aAAN,IAAuB,CNrBzB,CAAkC,EMqBL,GNrB7B,EMqBkC,ANrBO,KMqBF,KNrBvC,EAAmD,MMqBrD,EAAwD;AACtD,ANrBJ,MAAM,KMqBG,CNrBG,GAAG,GMqBX,CAAa,SAAb,GAAyB,GNrBK,CMqB9B,ANrB+B,UAAD,CAAlC;AMsBI,ANrBJ,SAAO,EMqBE,SNrBS,CAAC,GMqBf,GAAqB,ANrBP,EAAS,EMqBvB,GNrBc,CAAlB;AMsBG,AFsBC,AJ3CL,AKgBK,SD2BU,AC3BA,QD2BV,CAAmB,MAAnB,EAA2B,EC3B3B,GAA6B,CD2B7B,EAAiC;AErBpC,AFsBD,AJ1CF,AKeE,GChCA,MF2DO,IAAI,CAAC,IAAL,CAAU,eAAe,CAAC,MAAD,EAAS,MAAT,CAAzB,CAAP;AEpBA,AFqBD,AC3BC;AD6BF,AC5BC;AAED;;;;;;ACSE,ANrBI,EMqBJ,ONrBc,MMqBd,ANrBI,CMqBJ,ANrBqB,OAAjB,EMqBJ,ANrB8B,CMqB9B,MAAA,ANrBI,EAAiC,CMqBrC,UAAO,QAAP,EAAe;AACb,ANrBF,AKgBI,QCKI,CNpBN,AKeY,OLfL,CAAC,CMoBQ,ANpBT,CAAP,EMoBmB,ENpBL,EKeZ,CAA2B,GCKF,CAAC,ANpBP,CAAC,CAAD,CAArB,GKeE,CLdF,CKcyC,ECKzC,INnBO,CAAC,CAAD,CAAP,EKcE,ELdY,AKcsC,OLd/B,CAAC,CAAD,CADrB,IAEA,OAAO,CAAC,CAAD,CAAP,IAAc,OAAO,CAAC,CAAD,CAFrB,IAGA,OAAO,CAAC,CAAD,CAAP,IAAc,OAAO,CAAC,CAAD,CAJvB;AAMD,AKWC,MAAI,CAAC,UAAL,EAAiB;ACKf,AFuBE,AJrCN,AKUI,QCII,CAAC,AFuBO,EC3BL,GAAG,CAAC,ICIX,EAAiB,KDJP,CAAV,MD2BE,CAAmC,UAAnC,EAA+C,OAA/C,EAAsD;AEtBtD,AFuBJ,AC3BC,GAFD,MD6BO,AC3BA,ECIE,EDJE,OAAO,ID2BI,CEvBlB,AFuBmB,GEvBG,EDJf,ECIP,GFuBkB,AC3BW,ED2BE,MC3B5B,EAAoC,QD2BQ,CAAC,UAAD,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","file":"Coordinates.5e8c21ea.js","sourceRoot":"..","sourcesContent":["/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [opt_comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in desccending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (typeof direction === 'function') {\n            if (direction(target, arr[i - 1], arr[i]) > 0) {\n              return i - 1;\n            } else {\n              return i;\n            }\n          } else if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function (el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [opt_func] Comparison function.\n * @param {boolean} [opt_strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (opt_strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign =\n  typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        const output = Object(target);\n        for (let i = 1, ii = arguments.length; i < ii; ++i) {\n          const source = arguments[i];\n          if (source !== undefined && source !== null) {\n            for (const key in source) {\n              if (source.hasOwnProperty(key)) {\n                output[key] = source[key];\n              }\n            }\n          }\n        }\n        return output;\n      };\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport const getValues =\n  typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        const values = [];\n        for (const property in object) {\n          values.push(object[property]);\n        }\n        return values;\n      };\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [opt_target] Default event target for dispatched events.\n   */\n  constructor(opt_target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = opt_target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (listenersForType.indexOf(listener) === -1) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    /** @type {import(\"./Event.js\").default|Event} */\n    const evt = typeof event === 'string' ? new Event(event) : event;\n    const type = evt.type;\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const listeners = this.listeners_ && this.listeners_[type];\n    let propagate;\n    if (listeners) {\n      const dispatching = this.dispatching_ || (this.dispatching_ = {});\n      const pendingRemovals =\n        this.pendingRemovals_ || (this.pendingRemovals_ = {});\n      if (!(type in dispatching)) {\n        dispatching[type] = 0;\n        pendingRemovals[type] = 0;\n      }\n      ++dispatching[type];\n      for (let i = 0, ii = listeners.length; i < ii; ++i) {\n        if ('handleEvent' in listeners[i]) {\n          propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n            listeners[i]\n          ).handleEvent(evt);\n        } else {\n          propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n            listeners[i]\n          ).call(this, evt);\n        }\n        if (propagate === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --dispatching[type];\n      if (dispatching[type] === 0) {\n        let pr = pendingRemovals[type];\n        delete pendingRemovals[type];\n        while (pr--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete dispatching[type];\n      }\n      return propagate;\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [opt_type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(opt_type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return opt_type\n      ? opt_type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [opt_once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  if (opt_this && opt_this !== target) {\n    listener = listener.bind(opt_this);\n  }\n  if (opt_once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type|Type[], listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return} CombinedOnSignature\n */\n\n/***\n * @typedef {import(\"./events\").EventsKey|Array<import(\"./events\").EventsKey>} OnReturn\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    /***\n     * @type {OnSignature<EventTypes, import(\"./events/Event.js\").default, OnReturn>}\n     */\n    this.on = this.onInternal;\n\n    /***\n     * @type {OnSignature<EventTypes, import(\"./events/Event.js\").default, OnReturn>}\n     */\n    this.once = this.onceInternal;\n\n    /***\n     * @type {OnSignature<EventTypes, import(\"./events/Event.js\").default, void>}\n     */\n    this.un = this.unInternal;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function(?): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function(?): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function(?): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ (\n    (function () {\n      throw new Error('Unimplemented abstract method.');\n    })()\n  );\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {assign, isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [opt_values] An object with key-value pairs.\n   */\n  constructor(opt_values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, opt_silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (opt_silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, opt_silent) {\n    for (const key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [opt_silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, opt_silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'} Types\n */\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [opt_width] Canvas width.\n * @param {number} [opt_height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [opt_canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [opt_Context2DSettings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(\n  opt_width,\n  opt_height,\n  opt_canvasPool,\n  opt_Context2DSettings\n) {\n  const canvas =\n    opt_canvasPool && opt_canvasPool.length\n      ? opt_canvasPool.shift()\n      : WORKER_OFFSCREEN_CANVAS\n      ? new OffscreenCanvas(opt_width || 300, opt_height || 300)\n      : document.createElement('canvas');\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', opt_Context2DSettings)\n  );\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  /**\n   * Degrees\n   * @api\n   */\n  DEGREES: 'degrees',\n  /**\n   * Feet\n   * @api\n   */\n  FEET: 'ft',\n  /**\n   * Meters\n   * @api\n   */\n  METERS: 'm',\n  /**\n   * Pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n  /**\n   * Tile Pixels\n   * @api\n   */\n  TILE_PIXELS: 'tile-pixels',\n  /**\n   * US Feet\n   * @api\n   */\n  USFEET: 'us-ft',\n};\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution getPointResolution()} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").default}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").default} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function (x) {\n      const y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n})();\n\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport const log2 = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let log2;\n  if ('log2' in Math) {\n    // The environment supports the native Math.log2 function, use it…\n    log2 = Math.log2;\n  } else {\n    // … else, use the reference implementation of MDN:\n    log2 = function (x) {\n      return Math.log(x) * Math.LOG2E;\n    };\n  }\n  return log2;\n})();\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport {cosh} from '../math.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [opt_axisOrientation] Axis orientation.\n   */\n  constructor(code, opt_axisOrientation) {\n    super({\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    const message =\n      'Assertion failed. See https://openlayers.org/en/' +\n      path +\n      '/doc/errors/#' +\n      code +\n      ' for details.';\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [opt_extent] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value,\n    ];\n  }\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_extent\n) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(\n  center,\n  resolution,\n  rotation,\n  size,\n  opt_extent\n) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    opt_extent\n  );\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [opt_extent] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [opt_extent] Destination extent.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n  let coordinates = [];\n  if (opt_stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < opt_stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / opt_stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / opt_stops,\n        extent[2] - (width * i) / opt_stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / opt_stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle',\n};\n","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number} [opt_precision] Precision of the output string (i.e. number of decimal places)\n * @return {string} Formatted string\n */\nexport function padNumber(number, width, opt_precision) {\n  const numberString =\n    opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;\n  let decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width\n    ? numberString\n    : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @return {number} Value\n */\nexport function compareVersions(v1, v2) {\n  const s1 = ('' + v1).split('.');\n  const s2 = ('' + v2).split('.');\n\n  for (let i = 0; i < Math.max(s1.length, s2.length); i++) {\n    const n1 = parseInt(s1[i] || '0', 10);\n    const n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - deg * 3600 - min * 60;\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return (\n    deg +\n    '\\u00b0 ' +\n    padNumber(min, 2) +\n    '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) +\n    '\\u2033' +\n    (normalizedDegrees == 0\n      ? ''\n      : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0))\n  );\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits)\n    );\n  } else {\n    return '';\n  }\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [opt_sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    const sourceExtentWidth =\n      opt_sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {getDistance} from './sphere.js';\nimport {getWorldsAway} from './coordinate.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default} [opt_units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (opt_units && opt_units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n      }\n    }\n  } else {\n    const units = projection.getUnits();\n    if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && units !== Units.DEGREES) {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = opt_units\n        ? METERS_PER_UNIT[opt_units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return /** @type {Projection} */ (projection);\n  }\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [opt_output] Output.\n     * @param {number} [opt_dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [opt_projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [opt_projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(\n    coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {?Projection}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @param {ProjectionLike} projection The user projection.\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.  Note that this method is not yet a part of\n * the stable API.  Support for user projections is not yet complete and should\n * be considered experimental.\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {?Projection} The user projection (or null if not set).\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this\n * method is not yet a part of the stable API.  Support for user projections is\n * not yet complete and should be considered experimental.\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let sourceX = coord[0];\n    let sourceY = coord[1];\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        sourceX = sourceX - worldsAway * sourceExtentWidth;\n      }\n      sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n      sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n      transformed = transform([sourceX, sourceY]);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/control/MousePosition\n */\n\nimport Control from './Control.js';\nimport EventType from '../pointer/EventType.js';\nimport {\n  get as getProjection,\n  getTransformFromProjections,\n  getUserProjection,\n  identityTransform,\n} from '../proj.js';\nimport {listen} from '../events.js';\n\n/**\n * @type {string}\n */\nconst PROJECTION = 'projection';\n\n/**\n * @type {string}\n */\nconst COORDINATE_FORMAT = 'coordinateFormat';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:coordinateFormat'|'change:projection', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:coordinateFormat'|'change:projection', Return>} MousePositionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-mouse-position'] CSS class name.\n * @property {import(\"../coordinate.js\").CoordinateFormat} [coordinateFormat] Coordinate format.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the\n * control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {string|boolean} [placeholder] Markup to show when the mouse position is not\n * available (e.g. when the pointer leaves the map viewport).  By default, a non-breaking space\n * is rendered when the mouse leaves the viewport.  To render something else, provide a string\n * to be used as the text content (e.g. 'no position' or '' for an empty string).  Set the placeholder\n * to `false` to retain the last position when the mouse leaves the viewport.  In a future release, this\n * will be the default behavior.\n * @property {string} [undefinedHTML='&#160;'] This option is deprecated.  Use the `placeholder` option instead.\n */\n\n/**\n * @classdesc\n * A control to show the 2D coordinates of the mouse cursor. By default, these\n * are in the view projection, but can be in any supported projection.\n * By default the control is shown in the top right corner of the map, but this\n * can be changed by using the css selector `.ol-mouse-position`.\n *\n * On touch devices, which usually do not have a mouse cursor, the coordinates\n * of the currently touched position are shown.\n *\n * @api\n */\nclass MousePosition extends Control {\n  /**\n   * @param {Options} [opt_options] Mouse position options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const element = document.createElement('div');\n    element.className =\n      options.className !== undefined ? options.className : 'ol-mouse-position';\n\n    super({\n      element: element,\n      render: options.render,\n      target: options.target,\n    });\n\n    /***\n     * @type {MousePositionOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.on;\n\n    /***\n     * @type {MousePositionOnSignature<import(\"../Observable.js\").OnReturn>}\n     */\n    this.once;\n\n    /***\n     * @type {MousePositionOnSignature<void>}\n     */\n    this.un;\n\n    this.addChangeListener(PROJECTION, this.handleProjectionChanged_);\n\n    if (options.coordinateFormat) {\n      this.setCoordinateFormat(options.coordinateFormat);\n    }\n    if (options.projection) {\n      this.setProjection(options.projection);\n    }\n\n    /**\n     * @type {boolean}\n     * Change this to `false` when removing the deprecated `undefinedHTML` option.\n     */\n    let renderOnMouseOut = true;\n\n    /**\n     * @type {string}\n     */\n    let placeholder = '&#160;';\n\n    if ('undefinedHTML' in options) {\n      // deprecated behavior\n      if (options.undefinedHTML !== undefined) {\n        placeholder = options.undefinedHTML;\n      }\n      renderOnMouseOut = !!placeholder;\n    } else if ('placeholder' in options) {\n      if (options.placeholder === false) {\n        renderOnMouseOut = false;\n      } else {\n        placeholder = String(options.placeholder);\n      }\n    }\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.placeholder_ = placeholder;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderOnMouseOut_ = renderOnMouseOut;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = element.innerHTML;\n\n    /**\n     * @private\n     * @type {?import(\"../proj/Projection.js\").default}\n     */\n    this.mapProjection_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../proj.js\").TransformFunction}\n     */\n    this.transform_ = null;\n  }\n\n  /**\n   * @private\n   */\n  handleProjectionChanged_() {\n    this.transform_ = null;\n  }\n\n  /**\n   * Return the coordinate format type used to render the current position or\n   * undefined.\n   * @return {import(\"../coordinate.js\").CoordinateFormat|undefined} The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  getCoordinateFormat() {\n    return /** @type {import(\"../coordinate.js\").CoordinateFormat|undefined} */ (\n      this.get(COORDINATE_FORMAT)\n    );\n  }\n\n  /**\n   * Return the projection that is used to report the mouse position.\n   * @return {import(\"../proj/Projection.js\").default|undefined} The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  getProjection() {\n    return /** @type {import(\"../proj/Projection.js\").default|undefined} */ (\n      this.get(PROJECTION)\n    );\n  }\n\n  /**\n   * @param {MouseEvent} event Browser event.\n   * @protected\n   */\n  handleMouseMove(event) {\n    const map = this.getMap();\n    this.updateHTML_(map.getEventPixel(event));\n  }\n\n  /**\n   * @param {Event} event Browser event.\n   * @protected\n   */\n  handleMouseOut(event) {\n    this.updateHTML_(null);\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      const viewport = map.getViewport();\n      this.listenerKeys.push(\n        listen(viewport, EventType.POINTERMOVE, this.handleMouseMove, this)\n      );\n      if (this.renderOnMouseOut_) {\n        this.listenerKeys.push(\n          listen(viewport, EventType.POINTEROUT, this.handleMouseOut, this)\n        );\n      }\n      this.updateHTML_(null);\n    }\n  }\n\n  /**\n   * Set the coordinate format type used to render the current position.\n   * @param {import(\"../coordinate.js\").CoordinateFormat} format The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  setCoordinateFormat(format) {\n    this.set(COORDINATE_FORMAT, format);\n  }\n\n  /**\n   * Set the projection that is used to report the mouse position.\n   * @param {import(\"../proj.js\").ProjectionLike} projection The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  setProjection(projection) {\n    this.set(PROJECTION, getProjection(projection));\n  }\n\n  /**\n   * @param {?import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @private\n   */\n  updateHTML_(pixel) {\n    let html = this.placeholder_;\n    if (pixel && this.mapProjection_) {\n      if (!this.transform_) {\n        const projection = this.getProjection();\n        if (projection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_,\n            projection\n          );\n        } else {\n          this.transform_ = identityTransform;\n        }\n      }\n      const map = this.getMap();\n      const coordinate = map.getCoordinateFromPixelInternal(pixel);\n      if (coordinate) {\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_,\n            userProjection\n          );\n        }\n        this.transform_(coordinate, coordinate);\n        const coordinateFormat = this.getCoordinateFormat();\n        if (coordinateFormat) {\n          html = coordinateFormat(coordinate);\n        } else {\n          html = coordinate.toString();\n        }\n      }\n    }\n    if (!this.renderedHTML_ || html !== this.renderedHTML_) {\n      this.element.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n  }\n\n  /**\n   * Update the projection. Rendering of the coordinates is done in\n   * `handleMouseMove` and `handleMouseUp`.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.mapProjection_ = null;\n    } else {\n      if (this.mapProjection_ != frameState.viewState.projection) {\n        this.mapProjection_ = frameState.viewState.projection;\n        this.transform_ = null;\n      }\n    }\n  }\n}\n\nexport default MousePosition;\n","import MousePosition from \"ol/control/MousePosition\";\r\nimport { createStringXY } from \"ol/coordinate\";\r\n\r\nconst map=$(\"#map\").data(\"map\");\r\n\r\nconst mousePosition=new MousePosition({\r\n    coordinateFormat:createStringXY(2),\r\n    className:\"badge badge-piill badge-warning\",\r\n    target:\"coordinates\"\r\n});\r\n\r\nmap.addControl(mousePosition);"]}